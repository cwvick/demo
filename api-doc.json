{
  "swagger": "2.0",
  "info": {
    "description": "Api Documentation",
    "version": "1.0",
    "title": "Fatfoogoo REST Api Documentation",
    "termsOfService": "urn:tos",
    "contact": {
      "name": "Fatfoogoo Team"
    },
    "license": {
      "name": "Powered by Swagger",
      "url": "http://www.swagger.io"
    }
  },
  "host": "digitalextremes.qa.pok.fatfoogoo.com",
  "basePath": "/",
  "tags": [{
    "name": "transaction-service-controller",
    "description": "Transaction Service Controller"
  }, {
    "name": "wallet-service-controller",
    "description": "Wallet Service Controller"
  }, {
    "name": "payment-service-controller",
    "description": "Payment Service Controller"
  }, {
    "name": "o-auth-store-coupon-controller",
    "description": "O Auth Store Coupon Controller"
  }, {
    "name": "event-controller",
    "description": "Event Controller"
  }, {
    "name": "o-auth-store-wallet-controller",
    "description": "O Auth Store Wallet Controller"
  }, {
    "name": "payment-controller",
    "description": "Payment Controller"
  }, {
    "name": "address-server-controller",
    "description": "Address Server Controller"
  }, {
    "name": "application-version-service-controller",
    "description": "Application Version Service Controller"
  }, {
    "name": "client-creator-controller",
    "description": "Client Creator Controller"
  }, {
    "name": "o-auth-authorization-endpoint-impl",
    "description": "O Auth Authorization Endpoint Impl"
  }, {
    "name": "account-server-controller",
    "description": "Account Server Controller"
  }, {
    "name": "bulkupload",
    "description": "Catalog API"
  }, {
    "name": "o-auth-store-subscription-controller",
    "description": "O Auth Store Subscription Controller"
  }, {
    "name": "o-auth-test-controller",
    "description": "O Auth Test Controller"
  }, {
    "name": "offer-service-controller",
    "description": "Offer Service Controller"
  }, {
    "name": "biz-nav-server-controller",
    "description": "Biz Nav Server Controller"
  }, {
    "name": "meta-controller",
    "description": "Meta Controller"
  }, {
    "name": "generic-xml-integration-controller",
    "description": "Generic XML Integration Controller"
  }, {
    "name": "o-auth-store-meta-controller",
    "description": "O Auth Store Meta Controller"
  }, {
    "name": "coupon-service-controller",
    "description": "Coupon Service Controller"
  }, {
    "name": "identity-server-controller",
    "description": "Identity Server Controller"
  }, {
    "name": "o-auth-store-payment-controller",
    "description": "O Auth Store Payment Controller"
  }, {
    "name": "o-auth-store-payment-method-controller",
    "description": "O Auth Store Payment Method Controller"
  }, {
    "name": "campaign-controller",
    "description": "Campaign Controller"
  }, {
    "name": "purchase-server-controller",
    "description": "Purchase Server Controller"
  }, {
    "name": "message-controller",
    "description": "Message Controller"
  }, {
    "name": "terms-of-sale-controller",
    "description": "Terms Of Sale Controller"
  }, {
    "name": "report-server-controller",
    "description": "Report Server Controller"
  }, {
    "name": "o-auth-store-offer-service-controller",
    "description": "O Auth Store Offer Service Controller"
  }, {
    "name": "subscription-server-controller",
    "description": "Subscription Server Controller"
  }],
  "paths": {
    "/rest/**": {
      "options": {
        "tags": ["purchase-server-controller"],
        "summary": "buyWithVirtualCurrencyOptions",
        "operationId": "buyWithVirtualCurrencyOptionsUsingOPTIONS_1",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rest/oauth/authorize": {
      "get": {
        "tags": ["o-auth-authorization-endpoint-impl"],
        "summary": "authorize",
        "operationId": "authorizeUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "principal",
          "description": "principal",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Principal"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OAuth2AccessToken"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/oauth/service/store/**": {
      "options": {
        "tags": ["o-auth-store-meta-controller"],
        "summary": "buyWithVirtualCurrencyOptions",
        "operationId": "buyWithVirtualCurrencyOptionsUsingOPTIONS",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rest/oauth/service/store/coupon/v1/capture": {
      "post": {
        "tags": ["o-auth-store-coupon-controller"],
        "summary": "captureCoupons",
        "operationId": "captureCouponsUsingPOST",
        "consumes": ["text/html", "application/*", "text/plain"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "clientConfig",
          "description": "clientConfig",
          "required": false,
          "schema": {
            "$ref": "#/definitions/ClientConfig"
          }
        }, {
          "in": "body",
          "name": "accountIdentityId",
          "description": "accountIdentityId",
          "required": false,
          "schema": {
            "$ref": "#/definitions/AccountIdentityId"
          }
        }, {
          "in": "body",
          "name": "captureCouponRequest",
          "description": "captureCouponRequest",
          "required": true,
          "schema": {
            "$ref": "#/definitions/CaptureCouponRequest"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/rest/oauth/service/store/offers/errorresponse": {
      "get": {
        "tags": ["o-auth-store-offer-service-controller"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET_11",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/oauth/service/store/offers/ping": {
      "get": {
        "tags": ["o-auth-store-offer-service-controller"],
        "summary": "ping",
        "operationId": "pingUsingGET_11",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/oauth/service/store/offers/v3/": {
      "get": {
        "tags": ["o-auth-store-offer-service-controller"],
        "summary": "getOffersV3",
        "operationId": "getOffersV3UsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "clientConfig",
          "description": "clientConfig",
          "required": false,
          "schema": {
            "$ref": "#/definitions/ClientConfig"
          }
        }, {
          "in": "body",
          "name": "accountIdentityId",
          "description": "accountIdentityId",
          "required": false,
          "schema": {
            "$ref": "#/definitions/AccountIdentityId"
          }
        }, {
          "name": "debug",
          "in": "query",
          "description": "debug",
          "required": false,
          "type": "boolean"
        }, {
          "name": "query",
          "in": "query",
          "description": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "language",
          "in": "query",
          "description": "language",
          "required": false,
          "type": "string"
        }, {
          "name": "attributes",
          "in": "query",
          "description": "attributes",
          "required": false,
          "type": "string"
        }, {
          "name": "from",
          "in": "query",
          "description": "from",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "count",
          "in": "query",
          "description": "count",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "orderBy",
          "in": "query",
          "description": "orderBy",
          "required": false,
          "type": "string"
        }, {
          "name": "ascending",
          "in": "query",
          "description": "ascending",
          "required": false,
          "type": "boolean"
        }, {
          "name": "country",
          "in": "query",
          "description": "country",
          "required": false,
          "type": "string"
        }, {
          "name": "currency",
          "in": "query",
          "description": "currency",
          "required": false,
          "type": "string"
        }, {
          "name": "startDate",
          "in": "query",
          "description": "startDate",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "endDate",
          "in": "query",
          "description": "endDate",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "virtual",
          "in": "query",
          "description": "virtual",
          "required": false,
          "type": "boolean"
        }, {
          "name": "paymentForm",
          "in": "query",
          "description": "paymentForm",
          "required": false,
          "type": "string"
        }, {
          "name": "classificationType",
          "in": "query",
          "description": "classificationType",
          "required": false,
          "type": "string"
        }, {
          "name": "catalog",
          "in": "query",
          "description": "catalogId",
          "required": false,
          "type": "string"
        }, {
          "name": "catalogType",
          "in": "query",
          "description": "catalogLifeCycleString",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/oauth/service/store/payment/v1/me/authorize": {
      "post": {
        "tags": ["o-auth-store-payment-controller"],
        "summary": "authorizePayment",
        "operationId": "authorizePaymentUsingPOST",
        "consumes": ["text/html", "application/*", "text/plain"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "clientConfig",
          "description": "clientConfig",
          "required": false,
          "schema": {
            "$ref": "#/definitions/ClientConfig"
          }
        }, {
          "in": "body",
          "name": "accountIdentityId",
          "description": "accountIdentityId",
          "required": false,
          "schema": {
            "$ref": "#/definitions/AccountIdentityId"
          }
        }, {
          "in": "body",
          "name": "buyWithRealCurrencyRestParams",
          "description": "buyWithRealCurrencyRestParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/BuyWithRealCurrencyRestParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/rest/oauth/service/store/payment/v1/me/capture": {
      "post": {
        "tags": ["o-auth-store-payment-controller"],
        "summary": "capturePayment",
        "operationId": "capturePaymentUsingPOST",
        "consumes": ["text/html", "application/*", "text/plain"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "clientConfig",
          "description": "clientConfig",
          "required": false,
          "schema": {
            "$ref": "#/definitions/ClientConfig"
          }
        }, {
          "in": "body",
          "name": "accountIdentityId",
          "description": "accountIdentityId",
          "required": false,
          "schema": {
            "$ref": "#/definitions/AccountIdentityId"
          }
        }, {
          "in": "body",
          "name": "oAuth2Authentication",
          "description": "oAuth2Authentication",
          "required": false,
          "schema": {
            "$ref": "#/definitions/OAuth2Authentication"
          }
        }, {
          "in": "body",
          "name": "buyWithRealCurrencyRestParams",
          "description": "buyWithRealCurrencyRestParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/BuyWithRealCurrencyRestParams"
          }
        }, {
          "in": "body",
          "name": "responseFieldExpression",
          "description": "responseFieldExpression",
          "required": false,
          "schema": {
            "$ref": "#/definitions/ResponseFieldExpressionMatcher"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/rest/oauth/service/store/payment/v1/me/finalize/{transactionId}": {
      "post": {
        "tags": ["o-auth-store-payment-controller"],
        "summary": "finalizePayment",
        "operationId": "finalizePaymentUsingPOST",
        "consumes": ["text/html", "application/*", "text/plain"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "clientConfig",
          "description": "clientConfig",
          "required": false,
          "schema": {
            "$ref": "#/definitions/ClientConfig"
          }
        }, {
          "in": "body",
          "name": "accountIdentityId",
          "description": "accountIdentityId",
          "required": false,
          "schema": {
            "$ref": "#/definitions/AccountIdentityId"
          }
        }, {
          "name": "transactionId",
          "in": "path",
          "description": "transactionId",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "finalizePaymentParams",
          "description": "finalizePaymentParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/FinalizePaymentParams"
          }
        }, {
          "name": "fields",
          "in": "query",
          "description": "fields",
          "required": false,
          "type": "string"
        }, {
          "in": "body",
          "name": "responseFieldExpression",
          "description": "responseFieldExpression",
          "required": false,
          "schema": {
            "$ref": "#/definitions/ResponseFieldExpressionMatcher"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/rest/oauth/service/store/v1/me/meta": {
      "get": {
        "tags": ["o-auth-store-meta-controller"],
        "summary": "getMetaAccountStore",
        "operationId": "getMetaAccountStoreUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "clientConfig",
          "description": "clientConfig",
          "required": false,
          "schema": {
            "$ref": "#/definitions/ClientConfig"
          }
        }, {
          "in": "body",
          "name": "accountIdentityId",
          "description": "accountIdentityId",
          "required": false,
          "schema": {
            "$ref": "#/definitions/AccountIdentityId"
          }
        }, {
          "name": "scope",
          "in": "query",
          "description": "scope",
          "required": false,
          "type": "string"
        }, {
          "name": "country",
          "in": "query",
          "description": "country",
          "required": false,
          "type": "string"
        }, {
          "name": "currency",
          "in": "query",
          "description": "currencyIdentifier",
          "required": false,
          "type": "string"
        }, {
          "name": "paymentForm",
          "in": "query",
          "description": "paymentForm",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/oauth/service/store/v1/me/paymentmethod": {
      "post": {
        "tags": ["o-auth-store-payment-method-controller"],
        "summary": "updatePaymentMethod",
        "operationId": "updatePaymentMethodUsingPOST",
        "consumes": ["text/html", "application/*", "text/plain"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "clientConfig",
          "description": "clientConfig",
          "required": false,
          "schema": {
            "$ref": "#/definitions/ClientConfig"
          }
        }, {
          "in": "body",
          "name": "accountIdentityId",
          "description": "accountIdentityId",
          "required": false,
          "schema": {
            "$ref": "#/definitions/AccountIdentityId"
          }
        }, {
          "in": "body",
          "name": "updatePaymentParameters",
          "description": "updatePaymentParameters",
          "required": true,
          "schema": {
            "$ref": "#/definitions/UpdatePaymentParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "put": {
        "tags": ["o-auth-store-payment-method-controller"],
        "summary": "updatePaymentMethod",
        "operationId": "updatePaymentMethodUsingPUT",
        "consumes": ["text/html", "application/*", "text/plain"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "clientConfig",
          "description": "clientConfig",
          "required": false,
          "schema": {
            "$ref": "#/definitions/ClientConfig"
          }
        }, {
          "in": "body",
          "name": "accountIdentityId",
          "description": "accountIdentityId",
          "required": false,
          "schema": {
            "$ref": "#/definitions/AccountIdentityId"
          }
        }, {
          "in": "body",
          "name": "updatePaymentParameters",
          "description": "updatePaymentParameters",
          "required": true,
          "schema": {
            "$ref": "#/definitions/UpdatePaymentParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/rest/oauth/service/store/v1/me/paymentmethod/{scope}": {
      "delete": {
        "tags": ["o-auth-store-payment-method-controller"],
        "summary": "deletePaymentMethod",
        "operationId": "deletePaymentMethodUsingDELETE",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "clientConfig",
          "description": "clientConfig",
          "required": false,
          "schema": {
            "$ref": "#/definitions/ClientConfig"
          }
        }, {
          "in": "body",
          "name": "accountIdentityId",
          "description": "accountIdentityId",
          "required": false,
          "schema": {
            "$ref": "#/definitions/AccountIdentityId"
          }
        }, {
          "name": "scope",
          "in": "path",
          "description": "scope",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/rest/oauth/service/store/v1/me/subscription/cancel": {
      "post": {
        "tags": ["o-auth-store-subscription-controller"],
        "summary": "cancelActiveSubscription",
        "operationId": "cancelActiveSubscriptionUsingPOST",
        "consumes": ["text/html", "application/*", "text/plain"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "clientConfig",
          "description": "clientConfig",
          "required": false,
          "schema": {
            "$ref": "#/definitions/ClientConfig"
          }
        }, {
          "in": "body",
          "name": "accountIdentityId",
          "description": "accountIdentityId",
          "required": false,
          "schema": {
            "$ref": "#/definitions/AccountIdentityId"
          }
        }, {
          "in": "body",
          "name": "cancelActiveSubscriptionParams",
          "description": "cancelActiveSubscriptionParams",
          "required": false,
          "schema": {
            "$ref": "#/definitions/CancelActiveSubscriptionParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/rest/oauth/service/store/v1/me/subscription/reactivate": {
      "post": {
        "tags": ["o-auth-store-subscription-controller"],
        "summary": "reactivateRecurringSubscription",
        "operationId": "reactivateRecurringSubscriptionUsingPOST",
        "consumes": ["text/html", "application/*", "text/plain"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "clientConfig",
          "description": "clientConfig",
          "required": false,
          "schema": {
            "$ref": "#/definitions/ClientConfig"
          }
        }, {
          "in": "body",
          "name": "accountIdentityId",
          "description": "accountIdentityId",
          "required": false,
          "schema": {
            "$ref": "#/definitions/AccountIdentityId"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/rest/oauth/service/store/v1/me/subscription/transaction/{id}": {
      "get": {
        "tags": ["o-auth-store-subscription-controller"],
        "summary": "getSubscriptionByTransactionId",
        "operationId": "getSubscriptionByTransactionIdUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "clientConfig",
          "description": "clientConfig",
          "required": false,
          "schema": {
            "$ref": "#/definitions/ClientConfig"
          }
        }, {
          "in": "body",
          "name": "accountIdentityId",
          "description": "accountIdentityId",
          "required": false,
          "schema": {
            "$ref": "#/definitions/AccountIdentityId"
          }
        }, {
          "name": "id",
          "in": "path",
          "description": "transactionId",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/oauth/service/store/v1/me/subscription/{id}": {
      "get": {
        "tags": ["o-auth-store-subscription-controller"],
        "summary": "getSubscriptionById",
        "operationId": "getSubscriptionByIdUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "clientConfig",
          "description": "clientConfig",
          "required": false,
          "schema": {
            "$ref": "#/definitions/ClientConfig"
          }
        }, {
          "in": "body",
          "name": "accountIdentityId",
          "description": "accountIdentityId",
          "required": false,
          "schema": {
            "$ref": "#/definitions/AccountIdentityId"
          }
        }, {
          "name": "id",
          "in": "path",
          "description": "externalIdentityId",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/oauth/service/store/v1/me/wallet": {
      "get": {
        "tags": ["o-auth-store-wallet-controller"],
        "summary": "getMetaAccountStore",
        "operationId": "getMetaAccountStoreUsingGET_1",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "clientConfig",
          "description": "clientConfig",
          "required": false,
          "schema": {
            "$ref": "#/definitions/ClientConfig"
          }
        }, {
          "in": "body",
          "name": "accountIdentityId",
          "description": "accountIdentityId",
          "required": false,
          "schema": {
            "$ref": "#/definitions/AccountIdentityId"
          }
        }, {
          "name": "currency",
          "in": "query",
          "description": "currency",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/oauth/service/test/access": {
      "get": {
        "tags": ["o-auth-test-controller"],
        "summary": "testOAuthAccess",
        "operationId": "testOAuthAccessUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "clientConfig",
          "description": "clientConfig",
          "required": false,
          "schema": {
            "$ref": "#/definitions/ClientConfig"
          }
        }, {
          "in": "body",
          "name": "oAuth2Authentication",
          "description": "oAuth2Authentication",
          "required": false,
          "schema": {
            "$ref": "#/definitions/OAuth2Authentication"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/payment/v1/virtualcurrency/sample": {
      "get": {
        "tags": ["purchase-server-controller"],
        "summary": "buyWithVirtualCurrencySample",
        "operationId": "buyWithVirtualCurrencySampleUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BuyWithVirtualCurrencyRestParams"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/resource/report/v1/": {
      "get": {
        "tags": ["report-server-controller"],
        "summary": "getReport",
        "operationId": "getReportUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "report",
          "in": "query",
          "description": "report",
          "required": true,
          "type": "string"
        }, {
          "name": "from",
          "in": "query",
          "description": "from",
          "required": true,
          "type": "string"
        }, {
          "name": "to",
          "in": "query",
          "description": "to",
          "required": true,
          "type": "string"
        }, {
          "name": "client",
          "in": "query",
          "description": "client",
          "required": false,
          "type": "string"
        }, {
          "name": "csvDelimiter",
          "in": "query",
          "description": "csvDelimiterString",
          "required": false,
          "type": "string"
        }, {
          "name": "game",
          "in": "query",
          "description": "game",
          "required": false,
          "type": "string"
        }, {
          "name": "paymentCurrency",
          "in": "query",
          "description": "paymentCurrency",
          "required": false,
          "type": "string"
        }, {
          "name": "automatedPayment",
          "in": "query",
          "description": "automatedPayment",
          "required": false,
          "type": "string"
        }, {
          "name": "gameCurrency",
          "in": "query",
          "description": "gameCurrency",
          "required": false,
          "type": "string"
        }, {
          "name": "paymentType",
          "in": "query",
          "description": "paymentType",
          "required": false,
          "type": "string"
        }, {
          "name": "paymentStatus",
          "in": "query",
          "description": "paymentStatus",
          "required": false,
          "type": "string"
        }, {
          "name": "fulfillmentStatus",
          "in": "query",
          "description": "fulfillmentStatus",
          "required": false,
          "type": "string"
        }, {
          "name": "accountId",
          "in": "query",
          "description": "accountId",
          "required": false,
          "type": "string"
        }, {
          "name": "transactionId",
          "in": "query",
          "description": "transactionId",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/resource/report/v1/QAChargeback": {
      "get": {
        "tags": ["report-server-controller"],
        "summary": "getQAChargebackSourceFile",
        "operationId": "getQAChargebackSourceFileUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/resource/report/v1/errorresponse": {
      "get": {
        "tags": ["report-server-controller"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET_15",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/resource/report/v1/ping": {
      "get": {
        "tags": ["report-server-controller"],
        "summary": "ping",
        "operationId": "pingUsingGET_15",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/resource/report/v1/sample": {
      "get": {
        "tags": ["report-server-controller"],
        "summary": "getSample",
        "operationId": "getSampleUsingGET_8",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddOrUpdateAddressParams"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/resource/report/v1/sampleClient": {
      "get": {
        "tags": ["report-server-controller"],
        "summary": "getSampleClient",
        "operationId": "getSampleClientUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetEmailTemplateDataResult"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/account/v1/create": {
      "post": {
        "tags": ["account-server-controller"],
        "summary": "createAccount",
        "operationId": "createAccountUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "createAccountParams",
          "description": "createAccountParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/CreateAccountParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«CreateAccountResult»"
            }
          }
        }
      }
    },
    "/rest/services/account/v1/create/sample": {
      "get": {
        "tags": ["account-server-controller"],
        "summary": "getSample",
        "operationId": "getSampleUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateAccountParams"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/account/v1/creditcard": {
      "post": {
        "tags": ["account-server-controller"],
        "summary": "createCreditCard",
        "operationId": "createCreditCardUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "createCreditCardInfoParams",
          "description": "createCreditCardInfoParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/CreateCreditCardInfoParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateCreditCardInfoResult"
            }
          }
        }
      }
    },
    "/rest/services/account/v1/errorresponse": {
      "get": {
        "tags": ["account-server-controller"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET_1",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/account/v1/payment": {
      "post": {
        "tags": ["account-server-controller"],
        "summary": "deletePaymentInfoService",
        "operationId": "deletePaymentInfoServiceUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "deletePaymentParams",
          "description": "deletePaymentParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/DeletePaymentParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/rest/services/account/v1/ping": {
      "get": {
        "tags": ["account-server-controller"],
        "summary": "ping",
        "operationId": "pingUsingGET_1",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/account/v1/referenceBilling": {
      "post": {
        "tags": ["account-server-controller"],
        "summary": "createReferenceBilling",
        "operationId": "createReferenceBillingUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "referencedBillingInfoParams",
          "description": "referencedBillingInfoParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/ReferencedBillingInfoParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/rest/services/account/v1/referenceBilling/sample": {
      "get": {
        "tags": ["account-server-controller"],
        "summary": "getSampleRefBilling",
        "operationId": "getSampleRefBillingUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReferencedBillingInfoParams"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/account/v2/create": {
      "post": {
        "tags": ["account-server-controller"],
        "summary": "createAccountV2",
        "operationId": "createAccountV2UsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "createAccountParams",
          "description": "createAccountParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/CreateAccountParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/rest/services/account/v2/create/sample": {
      "get": {
        "tags": ["account-server-controller"],
        "summary": "getSampleV2",
        "operationId": "getSampleV2UsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateAccountParams"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/account/v2/errorresponse": {
      "get": {
        "tags": ["account-server-controller"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/account/v2/ping": {
      "get": {
        "tags": ["account-server-controller"],
        "summary": "ping",
        "operationId": "pingUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/address/v1/": {
      "post": {
        "tags": ["address-server-controller"],
        "summary": "addOrUpdateAddress",
        "operationId": "addOrUpdateAddressUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "addOrUpdateAddressParams",
          "description": "addOrUpdateAddressParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/AddOrUpdateAddressParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/rest/services/address/v1/create/sample": {
      "get": {
        "tags": ["address-server-controller"],
        "summary": "getSample",
        "operationId": "getSampleUsingGET_1",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddOrUpdateAddressParams"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/address/v1/errorresponse": {
      "get": {
        "tags": ["address-server-controller"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET_2",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/address/v1/ping": {
      "get": {
        "tags": ["address-server-controller"],
        "summary": "ping",
        "operationId": "pingUsingGET_2",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/app/errorresponse": {
      "get": {
        "tags": ["application-version-service-controller"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET_3",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/app/ping": {
      "get": {
        "tags": ["application-version-service-controller"],
        "summary": "ping",
        "operationId": "pingUsingGET_3",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/app/version": {
      "get": {
        "tags": ["application-version-service-controller"],
        "summary": "getVersion",
        "operationId": "getVersionUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppVersion"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/biznav/v1/": {
      "get": {
        "tags": ["biz-nav-server-controller"],
        "summary": "getMemberId",
        "operationId": "getMemberIdUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "username",
          "in": "query",
          "description": "referenceIdAndClientConfigName",
          "required": true,
          "type": "string"
        }, {
          "name": "hash",
          "in": "query",
          "description": "hash",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BizNavSsoResult"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/biznav/v1/errorresponse": {
      "get": {
        "tags": ["biz-nav-server-controller"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET_4",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/biznav/v1/ping": {
      "get": {
        "tags": ["biz-nav-server-controller"],
        "summary": "ping",
        "operationId": "pingUsingGET_4",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/biznav/v1/sample": {
      "get": {
        "tags": ["biz-nav-server-controller"],
        "summary": "getSample",
        "operationId": "getSampleUsingGET_2",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddOrUpdateAddressParams"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/bulkupload/errorresponse": {
      "get": {
        "tags": ["bulkupload"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET_5",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/bulkupload/ping": {
      "get": {
        "tags": ["bulkupload"],
        "summary": "ping",
        "operationId": "pingUsingGET_5",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/bulkupload/v1/status": {
      "get": {
        "tags": ["bulkupload"],
        "summary": "returns the status of a given upload process",
        "description": "Consider reading the documentation before using this operation.",
        "operationId": "statusUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "processId",
          "in": "query",
          "description": "processId",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BulkUploadParamsV1"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/bulkupload/v1/upload": {
      "post": {
        "tags": ["bulkupload"],
        "summary": "Uploads a list of Items and Offers to the Catalog",
        "description": "Consider reading the documentation before using this operation.",
        "operationId": "uploadUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "bulkUploadParamsV1",
          "description": "bulkUploadParamsV1",
          "required": true,
          "schema": {
            "$ref": "#/definitions/BulkUploadParamsV1"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BulkUploadParamsV1"
            }
          }
        }
      }
    },
    "/rest/services/campaigns/v1/": {
      "get": {
        "tags": ["campaign-controller"],
        "summary": "findCampaigns",
        "operationId": "findCampaignsUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "language",
          "in": "query",
          "description": "language",
          "required": true,
          "type": "string"
        }, {
          "name": "type",
          "in": "query",
          "description": "campaignType",
          "required": false,
          "type": "string"
        }, {
          "name": "attributes",
          "in": "query",
          "description": "attributes",
          "required": false,
          "type": "string"
        }, {
          "name": "from",
          "in": "query",
          "description": "from",
          "required": false,
          "type": "integer",
          "format": "int32"
        }, {
          "name": "count",
          "in": "query",
          "description": "count",
          "required": false,
          "type": "integer",
          "format": "int32"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Campaign"
              }
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/campaigns/v1/upselling": {
      "get": {
        "tags": ["campaign-controller"],
        "summary": "findUpsellingCampaignsV1",
        "operationId": "findUpsellingCampaignsV1UsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "language",
          "in": "query",
          "description": "language",
          "required": true,
          "type": "string"
        }, {
          "name": "from",
          "in": "query",
          "description": "from",
          "required": false,
          "type": "integer",
          "format": "int32"
        }, {
          "name": "count",
          "in": "query",
          "description": "count",
          "required": false,
          "type": "integer",
          "format": "int32"
        }, {
          "name": "triggerOfferId",
          "in": "query",
          "description": "triggerOfferId",
          "required": true,
          "type": "string"
        }, {
          "name": "referenceId",
          "in": "query",
          "description": "referenceId",
          "required": true,
          "type": "string"
        }, {
          "name": "catalogId",
          "in": "query",
          "description": "catalogId",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpsellingCampaign"
              }
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/campaigns/v1/{id}/daily": {
      "get": {
        "tags": ["campaign-controller"],
        "summary": "findDailyDealOffers",
        "operationId": "findDailyDealOffersUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "language",
          "in": "query",
          "description": "language",
          "required": true,
          "type": "string"
        }, {
          "name": "from",
          "in": "query",
          "description": "from",
          "required": false,
          "type": "integer",
          "format": "int32"
        }, {
          "name": "count",
          "in": "query",
          "description": "count",
          "required": false,
          "type": "integer",
          "format": "int32"
        }, {
          "name": "id",
          "in": "path",
          "description": "campaignId",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DailyDealOffersResult"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/campaigns/v1/{id}/offers": {
      "get": {
        "tags": ["campaign-controller"],
        "summary": "findCampaignOffers",
        "operationId": "findCampaignOffersUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "language",
          "in": "query",
          "description": "language",
          "required": true,
          "type": "string"
        }, {
          "name": "from",
          "in": "query",
          "description": "from",
          "required": false,
          "type": "integer",
          "format": "int32"
        }, {
          "name": "count",
          "in": "query",
          "description": "count",
          "required": false,
          "type": "integer",
          "format": "int32"
        }, {
          "name": "id",
          "in": "path",
          "description": "campaignId",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CampaignOffersResult"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/campaigns/v3/upselling": {
      "get": {
        "tags": ["campaign-controller"],
        "summary": "findUpsellingCampaignsV3",
        "operationId": "findUpsellingCampaignsV3UsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "language",
          "in": "query",
          "description": "language",
          "required": true,
          "type": "string"
        }, {
          "name": "from",
          "in": "query",
          "description": "from",
          "required": false,
          "type": "integer",
          "format": "int32"
        }, {
          "name": "count",
          "in": "query",
          "description": "count",
          "required": false,
          "type": "integer",
          "format": "int32"
        }, {
          "name": "triggerOfferId",
          "in": "query",
          "description": "triggerOfferId",
          "required": true,
          "type": "string"
        }, {
          "name": "referenceId",
          "in": "query",
          "description": "referenceId",
          "required": true,
          "type": "string"
        }, {
          "name": "catalogId",
          "in": "query",
          "description": "catalogId",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpsellingCampaign"
              }
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/client/v1/create": {
      "post": {
        "tags": ["client-creator-controller"],
        "summary": "createClient",
        "operationId": "createClientUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "createClientParams",
          "description": "createClientParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/CreateClientParams"
          }
        }],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ResponseHolder«CreateClientResult»"
            }
          }
        }
      }
    },
    "/rest/services/client/v1/create/sample": {
      "get": {
        "tags": ["client-creator-controller"],
        "summary": "getSample",
        "operationId": "getSampleUsingGET_3",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateClientParams"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/client/v1/default/create": {
      "post": {
        "tags": ["client-creator-controller"],
        "summary": "createDefaultClient",
        "operationId": "createDefaultClientUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "createClientParams",
          "description": "createClientParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/CreateDefaultClientParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«CreateClientResult»"
            }
          }
        }
      }
    },
    "/rest/services/client/v1/default/create/sample/ffg": {
      "get": {
        "tags": ["client-creator-controller"],
        "summary": "getDefaultFggSample",
        "operationId": "getDefaultFggSampleUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateDefaultClientParams"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/client/v1/errorresponse": {
      "get": {
        "tags": ["client-creator-controller"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET_6",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/client/v1/gameattributes": {
      "post": {
        "tags": ["client-creator-controller"],
        "summary": "createOrUpdateGameAttributes",
        "operationId": "createOrUpdateGameAttributesUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "createOrUpdateGameAttributeParams",
          "description": "createOrUpdateGameAttributeParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/CreateOrUpdateGameAttributeParams"
          }
        }],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ResponseHolder«CreateOrUpdateGameAttributeResult»"
            }
          }
        }
      }
    },
    "/rest/services/client/v1/ping": {
      "get": {
        "tags": ["client-creator-controller"],
        "summary": "ping",
        "operationId": "pingUsingGET_6",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/coupons/errorresponse": {
      "get": {
        "tags": ["coupon-service-controller"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET_7",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/coupons/ping": {
      "get": {
        "tags": ["coupon-service-controller"],
        "summary": "ping",
        "operationId": "pingUsingGET_7",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/coupons/v1/buy": {
      "post": {
        "tags": ["coupon-service-controller"],
        "summary": "buyCoupons",
        "operationId": "buyCouponsUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "request",
          "description": "request",
          "required": true,
          "schema": {
            "$ref": "#/definitions/BuyCouponsParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«BuyCouponsResult»"
            }
          }
        }
      }
    },
    "/rest/services/coupons/v1/buy/sample": {
      "get": {
        "tags": ["coupon-service-controller"],
        "summary": "getSample",
        "operationId": "getSampleUsingGET_4",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BuyCouponsParams"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/coupons/v1/buy/sample/response": {
      "get": {
        "tags": ["coupon-service-controller"],
        "summary": "getSampleResult",
        "operationId": "getSampleResultUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«BuyCouponsResult»"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/coupons/v1/redeem": {
      "post": {
        "tags": ["coupon-service-controller"],
        "summary": "redeemCoupons",
        "operationId": "redeemCouponsUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "request",
          "description": "request",
          "required": true,
          "schema": {
            "$ref": "#/definitions/RedeemCouponsParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«ReedemCouponsResult»"
            }
          }
        }
      }
    },
    "/rest/services/coupons/v1/verify/verbose": {
      "post": {
        "tags": ["coupon-service-controller"],
        "summary": "verifyCouponsVerbose",
        "operationId": "verifyCouponsVerboseUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "request",
          "description": "request",
          "required": true,
          "schema": {
            "$ref": "#/definitions/CouponVerificationVerboseParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«List«CouponVerificationVerboseResult»»"
            }
          }
        }
      }
    },
    "/rest/services/coupons/v2/verify/verbose": {
      "post": {
        "tags": ["coupon-service-controller"],
        "summary": "verifyCouponsVerboseV2",
        "operationId": "verifyCouponsVerboseV2UsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "request",
          "description": "request",
          "required": true,
          "schema": {
            "$ref": "#/definitions/CouponVerificationVerboseParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«List«CouponVerificationVerboseV2Result»»"
            }
          }
        }
      }
    },
    "/rest/services/event/category/list": {
      "get": {
        "tags": ["event-controller"],
        "summary": "getEventCategories",
        "operationId": "getEventCategoriesUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«List«string»»"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/event/create": {
      "post": {
        "tags": ["event-controller"],
        "summary": "createEvent",
        "operationId": "createEventUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "event",
          "description": "event",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Event"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«CreateEventResponse»"
            }
          }
        }
      }
    },
    "/rest/services/event/errorresponse": {
      "get": {
        "tags": ["event-controller"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET_8",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/event/history/list": {
      "get": {
        "tags": ["event-controller"],
        "summary": "getEventHistoryList",
        "operationId": "getEventHistoryListUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "clientName",
          "in": "query",
          "description": "clientName",
          "required": false,
          "type": "string"
        }, {
          "name": "eventName",
          "in": "query",
          "description": "eventName",
          "required": false,
          "type": "string"
        }, {
          "name": "firstResult",
          "in": "query",
          "description": "firstValue",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "maxResults",
          "in": "query",
          "description": "maxValues",
          "required": false,
          "type": "integer",
          "format": "int64"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«List«object»»"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/event/list": {
      "get": {
        "tags": ["event-controller"],
        "summary": "getEventList",
        "operationId": "getEventListUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "clientName",
          "in": "query",
          "description": "clientName",
          "required": false,
          "type": "string"
        }, {
          "name": "eventName",
          "in": "query",
          "description": "eventName",
          "required": false,
          "type": "string"
        }, {
          "name": "query",
          "in": "query",
          "description": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "firstResult",
          "in": "query",
          "description": "firstValue",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "maxResults",
          "in": "query",
          "description": "maxValues",
          "required": false,
          "type": "integer",
          "format": "int64"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«List«Event»»"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/event/ping": {
      "get": {
        "tags": ["event-controller"],
        "summary": "ping",
        "operationId": "pingUsingGET_8",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/event/sample": {
      "get": {
        "tags": ["event-controller"],
        "summary": "getSample",
        "operationId": "getSampleUsingGET_5",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/event/type/list": {
      "get": {
        "tags": ["event-controller"],
        "summary": "getEventTypes",
        "operationId": "getEventTypesUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«List«string»»"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/gc/generic/xml/": {
      "post": {
        "tags": ["generic-xml-integration-controller"],
        "summary": "processXML",
        "operationId": "processXMLUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "xmlString",
          "description": "xmlString",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/rest/services/gc/generic/xml/errorresponse": {
      "get": {
        "tags": ["generic-xml-integration-controller"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET_9",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/gc/generic/xml/ping": {
      "get": {
        "tags": ["generic-xml-integration-controller"],
        "summary": "ping",
        "operationId": "pingUsingGET_9",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/identity/v1/create": {
      "post": {
        "tags": ["identity-server-controller"],
        "summary": "createIdentity",
        "operationId": "createIdentityUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "createIdentityParams",
          "description": "createIdentityParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/CreateIdentityParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/rest/services/identity/v1/create/sample": {
      "get": {
        "tags": ["identity-server-controller"],
        "summary": "getSample",
        "operationId": "getSampleUsingGET_6",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateIdentityParams"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/identity/v1/errorresponse": {
      "get": {
        "tags": ["identity-server-controller"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET_10",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/identity/v1/ping": {
      "get": {
        "tags": ["identity-server-controller"],
        "summary": "ping",
        "operationId": "pingUsingGET_10",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/identity/v1/update": {
      "post": {
        "tags": ["identity-server-controller"],
        "summary": "updateIdentity",
        "operationId": "updateIdentityUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "updateIdentityParams",
          "description": "updateIdentityParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/UpdateIdentityParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/rest/services/identity/v1/update/sample": {
      "get": {
        "tags": ["identity-server-controller"],
        "summary": "getSampleUpdate",
        "operationId": "getSampleUpdateUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateIdentityParams"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/message/event/send": {
      "post": {
        "tags": ["message-controller"],
        "summary": "onSendMessageEvent",
        "operationId": "onSendMessageEventUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "messageData",
          "description": "messageData",
          "required": false,
          "schema": {
            "$ref": "#/definitions/MessageData"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/rest/services/message/subscription/send": {
      "post": {
        "tags": ["message-controller"],
        "summary": "sendSubscriptionData",
        "operationId": "sendSubscriptionDataUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "sendSubscriptionData",
          "description": "sendSubscriptionData",
          "required": false,
          "schema": {
            "$ref": "#/definitions/SendSubscriptionData"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/rest/services/offers/errorresponse": {
      "get": {
        "tags": ["offer-service-controller"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET_12",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/offers/ping": {
      "get": {
        "tags": ["offer-service-controller"],
        "summary": "ping",
        "operationId": "pingUsingGET_12",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/offers/v1/": {
      "get": {
        "tags": ["offer-service-controller"],
        "summary": "getOffersV1",
        "operationId": "getOffersV1UsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "debug",
          "in": "query",
          "description": "debug",
          "required": false,
          "type": "boolean"
        }, {
          "name": "query",
          "in": "query",
          "description": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "language",
          "in": "query",
          "description": "language",
          "required": false,
          "type": "string"
        }, {
          "name": "attributes",
          "in": "query",
          "description": "attributes",
          "required": false,
          "type": "string"
        }, {
          "name": "from",
          "in": "query",
          "description": "from",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "count",
          "in": "query",
          "description": "count",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "orderBy",
          "in": "query",
          "description": "orderBy",
          "required": false,
          "type": "string"
        }, {
          "name": "ascending",
          "in": "query",
          "description": "ascending",
          "required": false,
          "type": "boolean"
        }, {
          "name": "country",
          "in": "query",
          "description": "country",
          "required": false,
          "type": "string"
        }, {
          "name": "currency",
          "in": "query",
          "description": "currency",
          "required": false,
          "type": "string"
        }, {
          "name": "startDate",
          "in": "query",
          "description": "startDate",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "endDate",
          "in": "query",
          "description": "endDate",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "virtual",
          "in": "query",
          "description": "virtual",
          "required": false,
          "type": "boolean"
        }, {
          "name": "paymentForm",
          "in": "query",
          "description": "paymentForm",
          "required": false,
          "type": "string"
        }, {
          "name": "classificationType",
          "in": "query",
          "description": "classificationType",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/offers/v2/": {
      "get": {
        "tags": ["offer-service-controller"],
        "summary": "getOffersV2",
        "operationId": "getOffersV2UsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "debug",
          "in": "query",
          "description": "debug",
          "required": false,
          "type": "boolean"
        }, {
          "name": "query",
          "in": "query",
          "description": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "language",
          "in": "query",
          "description": "language",
          "required": false,
          "type": "string"
        }, {
          "name": "attributes",
          "in": "query",
          "description": "attributes",
          "required": false,
          "type": "string"
        }, {
          "name": "from",
          "in": "query",
          "description": "from",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "count",
          "in": "query",
          "description": "count",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "orderBy",
          "in": "query",
          "description": "orderBy",
          "required": false,
          "type": "string"
        }, {
          "name": "ascending",
          "in": "query",
          "description": "ascending",
          "required": false,
          "type": "boolean"
        }, {
          "name": "country",
          "in": "query",
          "description": "country",
          "required": false,
          "type": "string"
        }, {
          "name": "currency",
          "in": "query",
          "description": "currency",
          "required": false,
          "type": "string"
        }, {
          "name": "startDate",
          "in": "query",
          "description": "startDate",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "endDate",
          "in": "query",
          "description": "endDate",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "virtual",
          "in": "query",
          "description": "virtual",
          "required": false,
          "type": "boolean"
        }, {
          "name": "paymentForm",
          "in": "query",
          "description": "paymentForm",
          "required": false,
          "type": "string"
        }, {
          "name": "classificationType",
          "in": "query",
          "description": "classificationType",
          "required": false,
          "type": "string"
        }, {
          "name": "catalog",
          "in": "query",
          "description": "catalogId",
          "required": false,
          "type": "string"
        }, {
          "name": "catalogType",
          "in": "query",
          "description": "catalogLifeCycleString",
          "required": false,
          "type": "string"
        }, {
          "name": "externalOfferId",
          "in": "query",
          "description": "externalOfferId",
          "required": false,
          "type": "string"
        }, {
          "name": "externalPriceId",
          "in": "query",
          "description": "externalPriceId",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/offers/v3/": {
      "get": {
        "tags": ["offer-service-controller"],
        "summary": "getOffersV3",
        "operationId": "getOffersV3UsingGET_1",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "debug",
          "in": "query",
          "description": "debug",
          "required": false,
          "type": "boolean"
        }, {
          "name": "query",
          "in": "query",
          "description": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "language",
          "in": "query",
          "description": "language",
          "required": false,
          "type": "string"
        }, {
          "name": "attributes",
          "in": "query",
          "description": "attributes",
          "required": false,
          "type": "string"
        }, {
          "name": "from",
          "in": "query",
          "description": "from",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "count",
          "in": "query",
          "description": "count",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "orderBy",
          "in": "query",
          "description": "orderBy",
          "required": false,
          "type": "string"
        }, {
          "name": "ascending",
          "in": "query",
          "description": "ascending",
          "required": false,
          "type": "boolean"
        }, {
          "name": "country",
          "in": "query",
          "description": "country",
          "required": false,
          "type": "string"
        }, {
          "name": "currency",
          "in": "query",
          "description": "currency",
          "required": false,
          "type": "string"
        }, {
          "name": "startDate",
          "in": "query",
          "description": "startDate",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "endDate",
          "in": "query",
          "description": "endDate",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "virtual",
          "in": "query",
          "description": "virtual",
          "required": false,
          "type": "boolean"
        }, {
          "name": "paymentForm",
          "in": "query",
          "description": "paymentForm",
          "required": false,
          "type": "string"
        }, {
          "name": "classificationType",
          "in": "query",
          "description": "classificationType",
          "required": false,
          "type": "string"
        }, {
          "name": "catalog",
          "in": "query",
          "description": "catalogId",
          "required": false,
          "type": "string"
        }, {
          "name": "catalogType",
          "in": "query",
          "description": "catalogLifeCycleString",
          "required": false,
          "type": "string"
        }, {
          "name": "externalOfferId",
          "in": "query",
          "description": "externalOfferId",
          "required": false,
          "type": "string"
        }, {
          "name": "externalPriceId",
          "in": "query",
          "description": "externalPriceId",
          "required": false,
          "type": "string"
        }, {
          "name": "referenceId",
          "in": "query",
          "description": "referenceId",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/payment/errorresponse": {
      "get": {
        "tags": ["payment-controller"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET_13",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/payment/ping": {
      "get": {
        "tags": ["payment-controller"],
        "summary": "ping",
        "operationId": "pingUsingGET_13",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/payment/purchase/send": {
      "post": {
        "tags": ["payment-controller"],
        "summary": "sendPurchaseData",
        "operationId": "sendPurchaseDataUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "sendSuccessfulPurchaseData",
          "description": "sendSuccessfulPurchaseData",
          "required": true,
          "schema": {
            "$ref": "#/definitions/SendPurchaseData"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/rest/services/payment/purchase/send/sample": {
      "get": {
        "tags": ["payment-controller"],
        "summary": "sendPurchaseDataSample",
        "operationId": "sendPurchaseDataSampleUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SendPurchaseData"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/payment/update": {
      "post": {
        "tags": ["payment-controller"],
        "summary": "updatePaymentTransaction",
        "operationId": "updatePaymentTransactionUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "data",
          "in": "path",
          "description": "data",
          "required": true,
          "type": "ref"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DefaultPaymentProviderResult"
            }
          }
        }
      }
    },
    "/rest/services/payment/v1/virtualcurrency": {
      "post": {
        "tags": ["purchase-server-controller"],
        "summary": "buyWithVirtualCurrencyService",
        "operationId": "buyWithVirtualCurrencyServiceUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "buyWithVirtualCurrencyRestParams",
          "description": "buyWithVirtualCurrencyRestParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/BuyWithVirtualCurrencyRestParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/rest/services/store/errorresponse": {
      "get": {
        "tags": ["payment-service-controller"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET_14",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/store/payment/v1/authorize": {
      "post": {
        "tags": ["payment-service-controller"],
        "summary": "authorizePayment",
        "operationId": "authorizePaymentUsingPOST_1",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "clientConfig",
          "description": "clientConfig",
          "required": false,
          "schema": {
            "$ref": "#/definitions/ClientConfig"
          }
        }, {
          "in": "body",
          "name": "buyWithRealCurrencyRestParams",
          "description": "buyWithRealCurrencyRestParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/BuyWithRealCurrencyRestParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/rest/services/store/payment/v1/authorize/sample": {
      "get": {
        "tags": ["payment-service-controller"],
        "summary": "getSample",
        "operationId": "getSampleUsingGET_7",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BuyWithRealCurrencyRestParams"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/store/ping": {
      "get": {
        "tags": ["payment-service-controller"],
        "summary": "ping",
        "operationId": "pingUsingGET_14",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/subscription/v1/": {
      "get": {
        "tags": ["subscription-server-controller"],
        "summary": "getSubscription",
        "operationId": "getSubscriptionUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "subscriptionExternalId",
          "in": "query",
          "description": "subscriptionExternalId",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": ["subscription-server-controller"],
        "summary": "createSubscription",
        "operationId": "createSubscriptionUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "createSubscriptionParams",
          "description": "createSubscriptionParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/CreateSubscriptionParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/rest/services/subscription/v1/create/sample": {
      "get": {
        "tags": ["subscription-server-controller"],
        "summary": "getSample",
        "operationId": "getSampleUsingGET_9",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateSubscriptionParams"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/subscription/v1/errorresponse": {
      "get": {
        "tags": ["subscription-server-controller"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET_16",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/subscription/v1/ping": {
      "get": {
        "tags": ["subscription-server-controller"],
        "summary": "ping",
        "operationId": "pingUsingGET_16",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/transaction/v1/": {
      "post": {
        "tags": ["transaction-service-controller"],
        "summary": "createPayment",
        "operationId": "createPaymentUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "createPaymentTransactionParams",
          "description": "createPaymentTransactionParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/CreatePaymentTransactionParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentTransactionDataRest"
            }
          }
        }
      }
    },
    "/rest/services/transaction/v1/details": {
      "get": {
        "tags": ["transaction-service-controller"],
        "summary": "getDetails",
        "operationId": "getDetailsUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "transactionId",
          "in": "query",
          "description": "transactionId",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentTransactionData"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/transaction/v1/details/sample": {
      "get": {
        "tags": ["transaction-service-controller"],
        "summary": "getDetailsSample",
        "operationId": "getDetailsSampleUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "transactionId",
          "in": "query",
          "description": "transactionId",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«PaymentTransactionData»"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/transaction/v1/errorresponse": {
      "get": {
        "tags": ["transaction-service-controller"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET_17",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/transaction/v1/list": {
      "get": {
        "tags": ["transaction-service-controller"],
        "summary": "findPaymentTransaction",
        "operationId": "findPaymentTransactionUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "referenceId",
          "in": "query",
          "description": "referenceId",
          "required": true,
          "type": "string"
        }, {
          "name": "externalIdentityId",
          "in": "query",
          "description": "externalIdentityId",
          "required": false,
          "type": "string"
        }, {
          "name": "language",
          "in": "query",
          "description": "language",
          "required": true,
          "type": "string"
        }, {
          "name": "from",
          "in": "query",
          "description": "from",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "count",
          "in": "query",
          "description": "count",
          "required": false,
          "type": "integer",
          "format": "int64"
        }, {
          "name": "orderBy",
          "in": "query",
          "description": "orderBy",
          "required": false,
          "type": "string"
        }, {
          "name": "ascending",
          "in": "query",
          "description": "ascending",
          "required": false,
          "type": "boolean"
        }, {
          "name": "virtual",
          "in": "query",
          "description": "virtual",
          "required": false,
          "type": "boolean"
        }, {
          "name": "countTotal",
          "in": "query",
          "description": "countTotal",
          "required": false,
          "type": "boolean"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/transaction/v1/ping": {
      "get": {
        "tags": ["transaction-service-controller"],
        "summary": "ping",
        "operationId": "pingUsingGET_17",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/wallet/v1/balance": {
      "get": {
        "tags": ["wallet-service-controller"],
        "summary": "getBalance",
        "operationId": "getBalanceUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "externalIdentityId",
          "in": "query",
          "description": "externalIdentityId",
          "required": false,
          "type": "string"
        }, {
          "name": "referenceId",
          "in": "query",
          "description": "referenceId",
          "required": false,
          "type": "string"
        }, {
          "name": "currencyIdentifier",
          "in": "query",
          "description": "currencyIdentifier",
          "required": false,
          "type": "string"
        }, {
          "name": "externalAccountId",
          "in": "query",
          "description": "externalAccountId",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«List«AccountBalance»»"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/wallet/v1/balance/list": {
      "post": {
        "tags": ["wallet-service-controller"],
        "summary": "findBalances",
        "operationId": "findBalancesUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "findBalancesParams",
          "description": "findBalancesParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/FindBalancesRestParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«FindBalancesResult»"
            }
          }
        }
      }
    },
    "/rest/services/wallet/v1/balance/list/param/sample": {
      "get": {
        "tags": ["wallet-service-controller"],
        "summary": "getFindBalanceParamSample",
        "operationId": "getFindBalanceParamSampleUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FindBalancesRestParams"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/wallet/v1/balance/sample/list": {
      "get": {
        "tags": ["wallet-service-controller"],
        "summary": "getWalletSampleList",
        "operationId": "getWalletSampleListUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountBalance"
              }
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/wallet/v1/credit": {
      "post": {
        "tags": ["wallet-service-controller"],
        "summary": "creditWallet",
        "operationId": "creditWalletUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "gwalletTransaction",
          "description": "gwalletTransaction",
          "required": true,
          "schema": {
            "$ref": "#/definitions/GwalletTransaction"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«CreditWalletResult»"
            }
          }
        }
      }
    },
    "/rest/services/wallet/v1/credit/bulk": {
      "post": {
        "tags": ["wallet-service-controller"],
        "summary": "creditWallets",
        "operationId": "creditWalletsUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "gwalletTransactions",
          "description": "gwalletTransactions",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GwalletTransaction"
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«CreditWalletsResult»"
            }
          }
        }
      }
    },
    "/rest/services/wallet/v1/debit": {
      "post": {
        "tags": ["wallet-service-controller"],
        "summary": "debitWallet",
        "operationId": "debitWalletUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "gwalletTransaction",
          "description": "gwalletTransaction",
          "required": true,
          "schema": {
            "$ref": "#/definitions/GwalletTransaction"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«DebitWalletResult»"
            }
          }
        }
      }
    },
    "/rest/services/wallet/v1/debit/bulk": {
      "post": {
        "tags": ["wallet-service-controller"],
        "summary": "debitWallets",
        "operationId": "debitWalletsUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "gwalletTransactions",
          "description": "gwalletTransactions",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GwalletTransaction"
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«DebitWalletsResult»"
            }
          }
        }
      }
    },
    "/rest/services/wallet/v1/errorresponse": {
      "get": {
        "tags": ["wallet-service-controller"],
        "summary": "getErrorResponse",
        "operationId": "getErrorResponseUsingGET_18",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateEventResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/wallet/v1/ping": {
      "get": {
        "tags": ["wallet-service-controller"],
        "summary": "ping",
        "operationId": "pingUsingGET_18",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/wallet/v1/sample": {
      "get": {
        "tags": ["wallet-service-controller"],
        "summary": "getSample",
        "operationId": "getSampleUsingGET_10",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GwalletTransaction"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/wallet/v1/transaction/list": {
      "post": {
        "tags": ["wallet-service-controller"],
        "summary": "findWalletTransaction",
        "operationId": "findWalletTransactionUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "findWalletTransactionRestParams",
          "description": "findWalletTransactionRestParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/FindWalletTransactionRestParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«FindWalletTransactionRestResult»"
            }
          }
        }
      }
    },
    "/rest/services/wallet/v1/transaction/list/sample": {
      "get": {
        "tags": ["wallet-service-controller"],
        "summary": "getSampleForFindWalletTransactionRestParams",
        "operationId": "getSampleForFindWalletTransactionRestParamsUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FindWalletTransactionRestParams"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/services/wallet/v1/transfer": {
      "post": {
        "tags": ["wallet-service-controller"],
        "summary": "transferWalletAmount",
        "operationId": "transferWalletAmountUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "in": "body",
          "name": "transferWalletAmountParams",
          "description": "transferWalletAmountParams",
          "required": true,
          "schema": {
            "$ref": "#/definitions/TransferWalletAmountParams"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseHolder«TransferWalletAmountResult»"
            }
          }
        }
      }
    },
    "/rest/services/wallet/v1/transfer/sample": {
      "get": {
        "tags": ["wallet-service-controller"],
        "summary": "getTransferWalletAmountSample",
        "operationId": "getTransferWalletAmountSampleUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransferWalletAmountParams"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/store/legalNotice": {
      "get": {
        "tags": ["terms-of-sale-controller"],
        "summary": "getLegalNotice",
        "operationId": "getLegalNoticeUsingGET",
        "consumes": ["application/json"],
        "produces": ["text/html;charset=UTF-8"],
        "parameters": [{
          "name": "locale",
          "in": "query",
          "description": "locale",
          "required": false,
          "type": "string"
        }, {
          "name": "countryId",
          "in": "query",
          "description": "countryId",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/store/meta/v1": {
      "get": {
        "tags": ["meta-controller"],
        "summary": "findMetaV1",
        "operationId": "findMetaV1UsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [{
          "name": "language",
          "in": "query",
          "description": "locale",
          "required": true,
          "type": "string"
        }, {
          "name": "country",
          "in": "query",
          "description": "country",
          "required": true,
          "type": "string"
        }, {
          "name": "onlyTerms",
          "in": "query",
          "description": "onlyTerms",
          "required": false,
          "type": "boolean"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FindMetaResponse"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/store/payment/v1/steam/finalize": {
      "get": {
        "tags": ["purchase-server-controller"],
        "summary": "finalizeSteamTransaction",
        "operationId": "finalizeSteamTransactionUsingGET",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "query",
          "description": "appId",
          "required": true,
          "type": "string"
        }, {
          "name": "orderId",
          "in": "query",
          "description": "orderId",
          "required": true,
          "type": "string"
        }, {
          "name": "locale",
          "in": "query",
          "description": "locale",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/store/payment/v1/steam/initialize": {
      "get": {
        "tags": ["purchase-server-controller"],
        "summary": "initializeSteamTransaction",
        "operationId": "initializeSteamTransactionUsingGET",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "priceId",
          "in": "query",
          "description": "priceId",
          "required": true,
          "type": "string"
        }, {
          "name": "country",
          "in": "query",
          "description": "country",
          "required": true,
          "type": "string"
        }, {
          "name": "locale",
          "in": "query",
          "description": "locale",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/store/termsOfSale": {
      "get": {
        "tags": ["terms-of-sale-controller"],
        "summary": "getTerms",
        "operationId": "getTermsUsingGET",
        "consumes": ["application/json"],
        "produces": ["text/html;charset=UTF-8"],
        "parameters": [{
          "name": "alpha2CountryIdentifier",
          "in": "query",
          "description": "alpha2CountryIdentifier",
          "required": false,
          "type": "string"
        }, {
          "name": "countryId",
          "in": "query",
          "description": "countryId",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "500 message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "SerialCodeCollectionFile": {
      "properties": {
        "created": {
          "$ref": "#/definitions/Timestamp"
        },
        "externalId": {
          "type": "string"
        },
        "externalReferenceId": {
          "type": "string"
        },
        "fileImportType": {
          "type": "string",
          "enum": ["catalog", "campaign", "message", "serialCode", "mail", "walletCurrency", "walletAmountStatistics"]
        },
        "fileSize": {
          "type": "integer",
          "format": "int64"
        },
        "filenameInternal": {
          "type": "string"
        },
        "filenameOriginal": {
          "type": "string"
        },
        "filenamePhysical": {
          "type": "string"
        },
        "lastChange": {
          "$ref": "#/definitions/Timestamp"
        },
        "referenceId": {
          "type": "string"
        },
        "serialCodeCollectionExternalId": {
          "type": "string"
        },
        "serialCodeCollectionName": {
          "type": "string"
        }
      }
    },
    "LocalizedDescription": {
      "properties": {
        "locale": {
          "type": "string"
        },
        "long": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "short": {
          "type": "string"
        }
      }
    },
    "PropertyData": {
      "properties": {
        "name": {
          "type": "string"
        },
        "textValue": {
          "type": "string"
        }
      }
    },
    "CreditWalletResult": {
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WalletAccountExpense"
          }
        }
      }
    },
    "RiskClassData": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "allowedPaymentTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultClass": {
          "type": "boolean"
        },
        "endPoints": {
          "type": "integer",
          "format": "int32"
        },
        "excludedRoles": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["guest", "registered", "DRsuperadmin", "DRcustomercare", "DRaccountant", "DRcontentmanager", "CLIENTsuperadmin", "CLIENTadmin", "CLIENTcustomercare", "CLIENTaccountant", "CLIENTcontentmanager", "admin"]
          }
        },
        "maxTransactions": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "riskClassDataId": {
          "type": "string"
        },
        "startPoints": {
          "type": "integer",
          "format": "int32"
        },
        "transactionLimitDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionLimitDetails"
          }
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CouponVerificationVerboseResult": {
      "properties": {
        "couponCode": {
          "type": "string"
        },
        "couponGroup": {
          "type": "string"
        },
        "inGameIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "languageSpecificErrorMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalizedString"
          }
        },
        "validationStatus": {
          "type": "string"
        }
      }
    },
    "BulkUpload": {
      "properties": {
        "action": {
          "type": "string"
        },
        "catalog": {
          "type": "string"
        },
        "catalogVersionUpgrade": {
          "type": "string",
          "enum": ["minor", "major"]
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "itemTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemTemplate"
          }
        },
        "offers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfferDetails"
          }
        },
        "source": {
          "type": "string"
        },
        "subscriptionModels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionModelData"
          }
        },
        "version": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Image": {
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "DateTime": {
      "properties": {
        "afterNow": {
          "type": "boolean"
        },
        "beforeNow": {
          "type": "boolean"
        },
        "centuryOfEra": {
          "type": "integer",
          "format": "int32"
        },
        "chronology": {
          "$ref": "#/definitions/Chronology"
        },
        "dayOfMonth": {
          "type": "integer",
          "format": "int32"
        },
        "dayOfWeek": {
          "type": "integer",
          "format": "int32"
        },
        "dayOfYear": {
          "type": "integer",
          "format": "int32"
        },
        "equalNow": {
          "type": "boolean"
        },
        "era": {
          "type": "integer",
          "format": "int32"
        },
        "hourOfDay": {
          "type": "integer",
          "format": "int32"
        },
        "millis": {
          "type": "integer",
          "format": "int64"
        },
        "millisOfDay": {
          "type": "integer",
          "format": "int32"
        },
        "millisOfSecond": {
          "type": "integer",
          "format": "int32"
        },
        "minuteOfDay": {
          "type": "integer",
          "format": "int32"
        },
        "minuteOfHour": {
          "type": "integer",
          "format": "int32"
        },
        "monthOfYear": {
          "type": "integer",
          "format": "int32"
        },
        "secondOfDay": {
          "type": "integer",
          "format": "int32"
        },
        "secondOfMinute": {
          "type": "integer",
          "format": "int32"
        },
        "weekOfWeekyear": {
          "type": "integer",
          "format": "int32"
        },
        "weekyear": {
          "type": "integer",
          "format": "int32"
        },
        "year": {
          "type": "integer",
          "format": "int32"
        },
        "yearOfCentury": {
          "type": "integer",
          "format": "int32"
        },
        "yearOfEra": {
          "type": "integer",
          "format": "int32"
        },
        "zone": {
          "$ref": "#/definitions/DateTimeZone"
        }
      }
    },
    "FindBalancesParams": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "cacheUsed": {
          "type": "boolean"
        },
        "currencyIdentifier": {
          "type": "string"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "summarizeSplitWallets": {
          "type": "boolean"
        },
        "useReadOnly": {
          "type": "boolean"
        },
        "walletType": {
          "type": "string",
          "enum": ["regular", "reserved", "promo", "combined"]
        }
      }
    },
    "Item": {
      "properties": {
        "id": {
          "type": "string"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "longDescription": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "int64"
        },
        "shortDescription": {
          "type": "string"
        }
      }
    },
    "FindMetaResponse": {
      "properties": {
        "countries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalizedCountryDetails"
          }
        },
        "storeProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "termsConditions": {
          "$ref": "#/definitions/TermsConditionsResponse"
        }
      }
    },
    "OAuth2AccessToken": {
      "properties": {
        "additionalInformation": {
          "type": "object"
        },
        "expiration": {
          "type": "string",
          "format": "date-time"
        },
        "expired": {
          "type": "boolean"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int32"
        },
        "refreshToken": {
          "$ref": "#/definitions/OAuth2RefreshToken"
        },
        "scope": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tokenType": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "FindBalancesResult": {
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "countTotal": {
          "type": "integer",
          "format": "int32"
        },
        "exactCountTotal": {
          "type": "boolean"
        },
        "from": {
          "type": "integer",
          "format": "int32"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountBalance"
          }
        }
      }
    },
    "OfferDescription": {
      "properties": {
        "description": {
          "type": "string"
        },
        "localeIdentifier": {
          "type": "string"
        },
        "longDescription": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Countdown": {
      "properties": {
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BuyCodeOfferParams": {
      "properties": {
        "code": {
          "type": "string"
        },
        "externalPricePointId": {
          "type": "string"
        }
      }
    },
    "Subscription": {
      "properties": {
        "billingInterval": {
          "type": "integer",
          "format": "int64"
        },
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "string"
        },
        "recurring": {
          "type": "boolean"
        },
        "trialDuration": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TransferWalletAmountParams": {
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "amountDecimal": {
          "type": "number",
          "format": "double"
        },
        "currencyIdentifier": {
          "type": "string"
        },
        "messageKey": {
          "type": "string"
        },
        "messageParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sourceAccount": {
          "$ref": "#/definitions/AccountIdentityId"
        },
        "targetAccount": {
          "$ref": "#/definitions/AccountIdentityId"
        },
        "transactionId": {
          "type": "string"
        },
        "walletTrxTypeEnum": {
          "type": "string",
          "enum": ["transaction", "external", "lifetimeExpired", "chargeback", "refunded", "reversed", "transfer", "reserve", "revert", "settlement", "funding"]
        }
      }
    },
    "CreatePaymentTransactionParams": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "balance": {
          "$ref": "#/definitions/BalanceGrossNet"
        },
        "balanceWallet": {
          "$ref": "#/definitions/Balance"
        },
        "catalogIdentifier": {
          "type": "string"
        },
        "catalogLifeCycle": {
          "type": "string",
          "enum": ["prestaging", "staging", "production"]
        },
        "countryIdentifier": {
          "type": "string"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "gameIdentifier": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "inGameId": {
          "type": "string"
        },
        "paymentType": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        }
      }
    },
    "CreateSubscriptionParams": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "automatedPayment": {
          "type": "boolean"
        },
        "catalogId": {
          "$ref": "#/definitions/CatalogId"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "externalOfferId": {
          "type": "string"
        },
        "graceDurationInDays": {
          "type": "integer",
          "format": "int64"
        },
        "identityId": {
          "type": "string"
        },
        "inGameId": {
          "type": "string"
        },
        "paidIntervals": {
          "type": "integer",
          "format": "int64"
        },
        "recurring": {
          "type": "boolean"
        },
        "referenceId": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "subscriptionBillingIntervalInDays": {
          "type": "integer",
          "format": "int64"
        },
        "subscriptionDurationInDays": {
          "type": "integer",
          "format": "int64"
        },
        "transactionId": {
          "type": "string"
        },
        "trialDurationInDays": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "WalletAccountExpense": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "currencyIdentifier": {
          "type": "string"
        },
        "decimalAmount": {
          "type": "number",
          "format": "double"
        },
        "decimalAmountCombined": {
          "type": "number",
          "format": "double"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        },
        "referenceId": {
          "type": "string"
        },
        "threshold": {
          "type": "number",
          "format": "double"
        },
        "thresholdEnabled": {
          "type": "boolean"
        },
        "transactionDecimalAmount": {
          "type": "number",
          "format": "double"
        },
        "transactionId": {
          "type": "string"
        },
        "walletType": {
          "type": "string",
          "enum": ["regular", "reserved", "promo", "combined"]
        }
      }
    },
    "CreateAccountParams": {
      "properties": {
        "emailAddress": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "screenName": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "ResponseHolder«List«CouponVerificationVerboseV2Result»»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CouponVerificationVerboseV2Result"
          }
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AccountIdRest": {
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "CaptureCode": {
      "properties": {
        "code": {
          "type": "string"
        },
        "priceId": {
          "type": "string"
        }
      }
    },
    "DateTimeZone": {
      "properties": {
        "fixed": {
          "type": "boolean"
        }
      }
    },
    "CreditCardDetails": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "creditCardExternalId": {
          "type": "string"
        },
        "cvcCode": {
          "type": "integer",
          "format": "int32"
        },
        "cvcCodeAsString": {
          "type": "string"
        },
        "defaultPayment": {
          "type": "boolean"
        },
        "displayValue": {
          "type": "string"
        },
        "expiresMonth": {
          "type": "integer",
          "format": "int32"
        },
        "expiresMonthForUI": {
          "type": "string"
        },
        "expiresYear": {
          "type": "integer",
          "format": "int32"
        },
        "expiresYearForApi": {
          "type": "string"
        },
        "expiresYearForUI": {
          "type": "string"
        },
        "expiryNotificationDate": {
          "type": "string",
          "format": "date-time"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "lastFourDigits": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "paymentGroupType": {
          "type": "string",
          "enum": ["iFrame", "newWindow", "synchronous", "asynchronous", "virtual"]
        },
        "paymentInfoExternalId": {
          "type": "string"
        },
        "paymentType": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["MASTERCARD", "VISA", "AMEX", "DINERS", "DISCOVER", "JCB", "UNKNOWN", "Aura", "ELO", "Hipercard"]
        }
      }
    },
    "SubscriptionModelData": {
      "properties": {
        "billingInterval": {
          "type": "integer",
          "format": "int64"
        },
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "externalId": {
          "type": "string"
        },
        "recurring": {
          "type": "boolean"
        },
        "trial": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ResponseHolder«CreditWalletResult»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "$ref": "#/definitions/CreditWalletResult"
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CouponVerificationVerboseParams": {
      "properties": {
        "catalogId": {
          "$ref": "#/definitions/CatalogId"
        },
        "catalogLifeCycleEnum": {
          "type": "string",
          "enum": ["prestaging", "staging", "production"]
        },
        "couponCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errorMessageLocale": {
          "type": "string"
        }
      }
    },
    "PaymentFeeData": {
      "properties": {
        "additionalFee": {
          "type": "integer",
          "format": "int64"
        },
        "chargebackFee": {
          "type": "integer",
          "format": "int64"
        },
        "chargebackFeeType": {
          "type": "string",
          "enum": ["fixed", "percentage"]
        },
        "chargebackPercentage": {
          "type": "integer",
          "format": "int64"
        },
        "creditCardType": {
          "type": "string",
          "enum": ["MASTERCARD", "VISA", "AMEX", "DINERS", "DISCOVER", "JCB", "UNKNOWN", "Aura", "ELO", "Hipercard"]
        },
        "currencyIdentifier": {
          "type": "string"
        },
        "feeAboveThreshold": {
          "type": "integer",
          "format": "int64"
        },
        "feeBelowThreshold": {
          "type": "integer",
          "format": "int64"
        },
        "fixedFee": {
          "type": "integer",
          "format": "int64"
        },
        "minCents": {
          "type": "integer",
          "format": "int64"
        },
        "paymentMinimumFeeType": {
          "type": "string",
          "enum": ["ontop", "compensate"]
        },
        "paymentType": {
          "type": "string"
        },
        "percentage": {
          "type": "integer",
          "format": "int64"
        },
        "refundFee": {
          "type": "integer",
          "format": "int64"
        },
        "refundFeeType": {
          "type": "string",
          "enum": ["fixed", "percentage"]
        },
        "taxPercentage": {
          "type": "integer",
          "format": "int64"
        },
        "threshold": {
          "type": "integer",
          "format": "int64"
        },
        "transactionFee": {
          "type": "integer",
          "format": "int64"
        },
        "validFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "validToDate": {
          "$ref": "#/definitions/Timestamp"
        }
      }
    },
    "IdentityIdRest": {
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "ResponseHolder«CreateEventResponse»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "$ref": "#/definitions/CreateEventResponse"
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SendPurchaseData": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "amountWithTax": {
          "type": "string"
        },
        "amountWithoutTax": {
          "type": "string"
        },
        "baseResourcesUrl": {
          "type": "string"
        },
        "billingInterval": {
          "type": "integer",
          "format": "int64"
        },
        "catalogIdentifier": {
          "type": "string"
        },
        "cdnUrl": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientName": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "creditCardExpiryMonth": {
          "type": "string"
        },
        "creditCardExpiryYear": {
          "type": "string"
        },
        "creditCardHolderName": {
          "type": "string"
        },
        "creditCardLastFourDigits": {
          "type": "string"
        },
        "creditCardType": {
          "type": "string"
        },
        "currencyIdentifier": {
          "type": "string"
        },
        "currentDate": {
          "type": "string"
        },
        "currentDateMiddleEndian": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "emailBcc": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "emailCc": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "emailFrom": {
          "type": "string"
        },
        "emailTo": {
          "type": "string"
        },
        "errorDescription": {
          "type": "string"
        },
        "escapedCurrencySymbol": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "gameId": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "legalNoticeURL": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "mailOriginatorReferenceId": {
          "type": "string"
        },
        "messageType": {
          "type": "string",
          "enum": ["sendSuccessfulPurchaseUSA", "sendSuccessfulPurchaseROW", "sendSuccessfulPurchaseLineItemsUSA", "sendSuccessfulPurchaseLineItemsROW", "sendConfirmationAutoRenewal", "sendSuccessfulSubscription", "sendFailedPurchaseData", "sendRenewalNotification", "sendExpirationNotification", "sendCancelRecurringSubscription", "sendSubcriptionExpired", "sendAccountDeactivation", "sendCustomerCareNewMessageForTicketNotification", "sendNewTicketMessage", "sendCreditCardExpiryMessage", "sendPendingPurchaseFailed", "sendPurchaseChargeback", "sendSecondLevelSupportRequestMessage", "sendPaymentSupportProvidedMessage", "sendNoDefaultPaymentFormDefinedMessage", "sendUpdateTicketMessage", "sendGcOrderCouponCodeMessage", "sendConfirmationEmailNotification", "sendReportStatus", "sendReport", "sendPaymentMethodVerificationSuccessful", "sendCreateAdminUserNotification", "sendFailedELVPurchase", "sendPendingELVPurchase", "sendAlertLowSerialCodes", "sendForgottenUsername", "sendMailToResetPassword", "sendCancelRecurringSubscriptionProviderEmail", "sendOfflinePurchaseInstructions"]
        },
        "paymentDate": {
          "type": "string"
        },
        "paymentDateMiddleEndian": {
          "type": "string"
        },
        "paymentType": {
          "type": "string"
        },
        "paymentTypeEnum": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "privacyURL": {
          "type": "string"
        },
        "productDescription": {
          "type": "string"
        },
        "productname": {
          "type": "string"
        },
        "ratingImageList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "screenname": {
          "type": "string"
        },
        "securityKey": {
          "type": "string"
        },
        "sellingEntity": {
          "type": "string"
        },
        "sellingEntityFooter": {
          "type": "string"
        },
        "sendPurchaseLineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SendPurchaseLineItem"
          }
        },
        "sendingDate": {
          "$ref": "#/definitions/Timestamp"
        },
        "sepaMandate": {
          "$ref": "#/definitions/EmailSEPAMandateData"
        },
        "state": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "tax": {
          "type": "string"
        },
        "termsAndConditionsURL": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "yearToString": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      }
    },
    "EmailTemplateData": {
      "properties": {
        "definedClasspath": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Locale"
          }
        },
        "definedUpload": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Locale"
          }
        },
        "messageType": {
          "type": "string",
          "enum": ["sendSuccessfulPurchaseUSA", "sendSuccessfulPurchaseROW", "sendSuccessfulPurchaseLineItemsUSA", "sendSuccessfulPurchaseLineItemsROW", "sendConfirmationAutoRenewal", "sendSuccessfulSubscription", "sendFailedPurchaseData", "sendRenewalNotification", "sendExpirationNotification", "sendCancelRecurringSubscription", "sendSubcriptionExpired", "sendAccountDeactivation", "sendCustomerCareNewMessageForTicketNotification", "sendNewTicketMessage", "sendCreditCardExpiryMessage", "sendPendingPurchaseFailed", "sendPurchaseChargeback", "sendSecondLevelSupportRequestMessage", "sendPaymentSupportProvidedMessage", "sendNoDefaultPaymentFormDefinedMessage", "sendUpdateTicketMessage", "sendGcOrderCouponCodeMessage", "sendConfirmationEmailNotification", "sendReportStatus", "sendReport", "sendPaymentMethodVerificationSuccessful", "sendCreateAdminUserNotification", "sendFailedELVPurchase", "sendPendingELVPurchase", "sendAlertLowSerialCodes", "sendForgottenUsername", "sendMailToResetPassword", "sendCancelRecurringSubscriptionProviderEmail", "sendOfflinePurchaseInstructions"]
        },
        "missingClasspath": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Locale"
          }
        },
        "missingUpload": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Locale"
          }
        },
        "source": {
          "type": "string"
        },
        "subType": {
          "type": "string"
        }
      }
    },
    "FollowUpAction": {
      "properties": {
        "translations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "enum": ["USE_ANOTHER_PAYMENT_METHOD", "MAKE_ONE_TIME_PAYPAL_PURCHASE", "NEW_PAYPAL_BILLING_AGREEMENT"]
        }
      }
    },
    "CreditWalletsResult": {
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WalletAccountExpense"
          }
        }
      }
    },
    "ResponseHolder«TransferWalletAmountResult»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "$ref": "#/definitions/TransferWalletAmountResult"
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AgeRatingData": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "ageRatingDataId": {
          "type": "integer",
          "format": "int64"
        },
        "ageRatingName": {
          "type": "string"
        },
        "avsInternalName": {
          "type": "string"
        },
        "countryList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "descriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfferDescription"
          }
        },
        "image": {
          "$ref": "#/definitions/FileData"
        }
      }
    },
    "Attribute": {
      "properties": {
        "category": {
          "type": "string"
        },
        "identityRelevant": {
          "type": "boolean"
        },
        "inGameId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "sourceInGameId": {
          "type": "string"
        },
        "sourceType": {
          "type": "string",
          "enum": ["UNKNOWN", "OFFER", "ITEM", "CAMPAIGN"]
        }
      }
    },
    "TimeZoneInfo": {
      "properties": {
        "timeZoneNSOffset": {
          "type": "integer",
          "format": "int32"
        },
        "timeZoneOffset": {
          "type": "integer",
          "format": "int32"
        },
        "timeZoneSSOffset": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LocalizedWebResource": {
      "properties": {
        "archetype": {
          "type": "string",
          "enum": ["image", "serialCodeFile", "bulkUploadFile", "video"]
        },
        "attachedFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalizedWebResource"
          }
        },
        "descriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalizedDescription"
          }
        },
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ResponseHolder«CreateClientResult»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "$ref": "#/definitions/CreateClientResult"
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "FindBalancesRestParams": {
      "properties": {
        "findBalancesParams": {
          "$ref": "#/definitions/FindBalancesParams"
        }
      }
    },
    "Timestamp": {
      "properties": {
        "date": {
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "type": "integer",
          "format": "int32"
        },
        "hours": {
          "type": "integer",
          "format": "int32"
        },
        "minutes": {
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "type": "integer",
          "format": "int32"
        },
        "nanos": {
          "type": "integer",
          "format": "int32"
        },
        "seconds": {
          "type": "integer",
          "format": "int32"
        },
        "time": {
          "type": "integer",
          "format": "int64"
        },
        "timezoneOffset": {
          "type": "integer",
          "format": "int32"
        },
        "year": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PreconditionData": {
      "properties": {
        "catalogContentType": {
          "type": "string",
          "enum": ["item_template", "offer", "pricePoint", "campaign", "subscription", "catalog", "bulkUpload", "bulkUploadCampaign", "region", "avs"]
        },
        "externalId": {
          "type": "string"
        },
        "externalIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "preconditionType": {
          "type": "string",
          "enum": ["tag", "country", "fraud", "paymentType", "region", "regionCountry"]
        }
      }
    },
    "PriceRangeLimitationBean": {
      "properties": {
        "currencyIdentifier": {
          "type": "string"
        },
        "from": {
          "type": "number",
          "format": "double"
        },
        "to": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "LocalizedState": {
      "properties": {
        "countryIdentifier": {
          "type": "string"
        },
        "localeId": {
          "type": "string"
        },
        "localizedName": {
          "type": "string"
        },
        "longDescription": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        }
      }
    },
    "GwalletTransactionOut": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "amountDecimal": {
          "type": "number",
          "format": "double"
        },
        "currencyIdentifier": {
          "type": "string"
        },
        "currentBalance": {
          "type": "integer",
          "format": "int64"
        },
        "currentBalanceDecimal": {
          "type": "number",
          "format": "double"
        },
        "description": {
          "type": "string"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "externalOfferId": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "messageKey": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "transactionDetailId": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "walletTrxTime": {
          "$ref": "#/definitions/Timestamp"
        },
        "walletTrxType": {
          "type": "string",
          "enum": ["transaction", "external", "lifetimeExpired", "chargeback", "refunded", "reversed", "transfer", "reserve", "revert", "settlement", "funding"]
        }
      }
    },
    "BulkUploadParamsV1": {
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["upload", "extractZip", "validateXml", "validateContent", "staging", "publish", "publishAsync", "delete", "download"]
          }
        },
        "data": {
          "$ref": "#/definitions/BulkUpload"
        },
        "images": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "referenceId": {
          "type": "string"
        }
      }
    },
    "TransferWalletAmountResult": {
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WalletAccountExpense"
          }
        }
      }
    },
    "CampaignOffersResult": {
      "properties": {
        "campaign": {
          "$ref": "#/definitions/CampaignData"
        },
        "offerList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Offer"
          }
        }
      }
    },
    "AdminUser": {
      "properties": {
        "adminEmail": {
          "type": "string"
        },
        "adminNickname": {
          "type": "string"
        },
        "adminPassword": {
          "type": "string"
        },
        "drAdminUser": {
          "type": "boolean"
        },
        "userRoles": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["guest", "registered", "DRsuperadmin", "DRcustomercare", "DRaccountant", "DRcontentmanager", "CLIENTsuperadmin", "CLIENTadmin", "CLIENTcustomercare", "CLIENTaccountant", "CLIENTcontentmanager", "admin"]
          }
        }
      }
    },
    "ResponseHolder«FindWalletTransactionRestResult»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "$ref": "#/definitions/FindWalletTransactionRestResult"
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BalanceGrossNet": {
      "properties": {
        "amountGross": {
          "type": "integer",
          "format": "int64"
        },
        "amountNet": {
          "type": "integer",
          "format": "int64"
        },
        "currencyIdentifier": {
          "type": "string"
        },
        "decimalAmountGross": {
          "type": "number",
          "format": "double"
        },
        "decimalAmountNet": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ResponseHolder«DebitWalletResult»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "$ref": "#/definitions/DebitWalletResult"
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "EmailSEPAMandateData": {
      "properties": {
        "bankBillingInfoId": {
          "type": "integer",
          "format": "int64"
        },
        "clientConfigId": {
          "type": "integer",
          "format": "int64"
        },
        "creditorCompanyId": {
          "type": "string"
        },
        "creditorCompanyInfo": {
          "type": "string"
        },
        "debtorAddress": {
          "type": "string"
        },
        "debtorBankBIC": {
          "type": "string"
        },
        "debtorCity": {
          "type": "string"
        },
        "debtorCountry": {
          "type": "string"
        },
        "debtorIBAN": {
          "type": "string"
        },
        "debtorName": {
          "type": "string"
        },
        "debtorPostalCode": {
          "type": "string"
        },
        "expiredAtDate": {
          "$ref": "#/definitions/Timestamp"
        },
        "initialTransactionId": {
          "type": "string"
        },
        "languageTwoLetters": {
          "type": "string"
        },
        "localizedDebtorCountry": {
          "type": "string"
        },
        "mandateDate": {
          "$ref": "#/definitions/Timestamp"
        },
        "mandateDateBigEndian": {
          "type": "string"
        },
        "mandateDateMiddleEndian": {
          "type": "string"
        },
        "mandateSignatureEmail": {
          "type": "string"
        },
        "mandateState": {
          "type": "string",
          "enum": ["NEW", "EXPIRED", "SIGNED"]
        },
        "mandateType": {
          "type": "string",
          "enum": ["ONE_OFF", "RECURRING"]
        },
        "mandateUniqueReference": {
          "type": "string"
        },
        "paymentDueDateBigEndian": {
          "type": "string"
        },
        "paymentDueDateMiddleEndian": {
          "type": "string"
        }
      }
    },
    "DebitWalletsResult": {
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WalletAccountExpense"
          }
        }
      }
    },
    "MonetaryValue": {
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "amountDisplay": {
          "type": "integer",
          "format": "int64"
        },
        "currencyIdentifier": {
          "type": "string"
        },
        "decimalAmount": {
          "type": "number",
          "format": "double"
        },
        "decimalAmountDisplay": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "BuyWithRealCurrencyRestParams": {
      "properties": {
        "account": {
          "$ref": "#/definitions/AccountIdRest"
        },
        "addressId": {
          "type": "string"
        },
        "bankBillingInfoId": {
          "type": "string"
        },
        "catalogIdentifier": {
          "type": "string"
        },
        "catalogLifeCycle": {
          "type": "string",
          "enum": ["prestaging", "staging", "production"]
        },
        "couponCode": {
          "type": "string"
        },
        "creditCardCvc": {
          "type": "string"
        },
        "creditCardId": {
          "type": "string"
        },
        "externalCampaignId": {
          "type": "string"
        },
        "externalTransactionId": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/IdentityIdRest"
        },
        "mandateAcceptance": {
          "$ref": "#/definitions/MandateAcceptanceRest"
        },
        "paymentType": {
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/Price"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "referenceBillingInfoId": {
          "type": "string"
        },
        "termsAndConditionsId": {
          "type": "string"
        },
        "timeZoneInfo": {
          "$ref": "#/definitions/TimeZoneInfo"
        },
        "transactionId": {
          "type": "string"
        },
        "userCustomAttributes": {
          "$ref": "#/definitions/UserCustomAttributes"
        }
      }
    },
    "ResponseHolder«PaymentTransactionData»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "$ref": "#/definitions/PaymentTransactionData"
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CreateEventResponse": {
      "properties": {
        "createEventStatus": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ResponseHolder«FindBalancesResult»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "$ref": "#/definitions/FindBalancesResult"
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "UpsellingTriggerData": {
      "properties": {
        "triggerOfferId": {
          "type": "string"
        }
      }
    },
    "UpdatePaymentParams": {
      "properties": {
        "address": {
          "$ref": "#/definitions/AddOrUpdateAddressParams"
        },
        "bankBilling": {
          "$ref": "#/definitions/BankBillingInfo"
        },
        "creditCard": {
          "$ref": "#/definitions/CreateCreditCardInfoParams"
        },
        "paymentType": {
          "type": "string"
        },
        "referencedBilling": {
          "$ref": "#/definitions/ReferencedBillingInfo"
        },
        "scope": {
          "type": "string"
        },
        "showDetailsInStore": {
          "type": "boolean"
        }
      }
    },
    "ResponseHolder«CreateAccountResult»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "$ref": "#/definitions/CreateAccountResult"
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Event": {
      "properties": {
        "clientId": {
          "type": "string"
        },
        "clientName": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "referenceId": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "UpdateIdentityParams": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "gameIdentifier": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        }
      }
    },
    "RedeemCouponsParams": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "couponCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        }
      }
    },
    "CountryDetails": {
      "properties": {
        "eu": {
          "type": "boolean"
        },
        "locale": {
          "type": "string"
        },
        "longDescription": {
          "type": "string"
        },
        "numcode": {
          "type": "string"
        },
        "printableName": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "stateMandatory": {
          "type": "boolean"
        }
      }
    },
    "ItemBundle": {
      "properties": {
        "inGameId": {
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CaptureCouponRequest": {
      "properties": {
        "affiliateId": {
          "type": "string"
        },
        "codes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CaptureCode"
          }
        },
        "countryId": {
          "type": "string"
        },
        "externalTransactionId": {
          "type": "string"
        },
        "language": {
          "type": "string"
        }
      }
    },
    "Locale": {
      "properties": {
        "country": {
          "type": "string"
        },
        "displayCountry": {
          "type": "string"
        },
        "displayLanguage": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "displayScript": {
          "type": "string"
        },
        "displayVariant": {
          "type": "string"
        },
        "extensionKeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Character"
          }
        },
        "language": {
          "type": "string"
        },
        "script": {
          "type": "string"
        },
        "unicodeLocaleAttributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unicodeLocaleKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "variant": {
          "type": "string"
        }
      }
    },
    "ResponseHolder«List«Event»»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          }
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ResponseHolder«List«string»»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TransactionStatus": {
      "properties": {
        "alreadyProcessed": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "resend": {
          "type": "boolean"
        },
        "transactionStatus": {
          "type": "string",
          "enum": ["initialized", "failed", "pending", "success", "error", "chargebacked", "refund_requested", "refunded", "refund_declined", "submitted", "reversed", "not_synchronized", "pending_data", "fraud"]
        },
        "transactionStatusMessage": {
          "type": "string"
        }
      }
    },
    "UpsellingCampaign": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "upsellingOffers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Offer"
          }
        }
      }
    },
    "FinalizePaymentParams": {
      "properties": {
        "timeZoneNSOffset": {
          "type": "integer",
          "format": "int32"
        },
        "timeZoneOffset": {
          "type": "integer",
          "format": "int32"
        },
        "timeZoneSSOffset": {
          "type": "integer",
          "format": "int32"
        },
        "userCustomAttributes": {
          "$ref": "#/definitions/UserCustomAttributes"
        }
      }
    },
    "UpsellingTriggerEventData": {
      "properties": {
        "upsellingTriggerEventType": {
          "type": "string",
          "enum": ["firstPurchase", "everyTime"]
        }
      }
    },
    "ResponseHolder«ReedemCouponsResult»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "$ref": "#/definitions/ReedemCouponsResult"
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SendPurchaseLineItem": {
      "properties": {
        "amount": {
          "type": "string"
        },
        "amountTotal": {
          "type": "string"
        },
        "productname": {
          "type": "string"
        },
        "quantity": {
          "type": "string"
        },
        "serialCode": {
          "type": "string"
        }
      }
    },
    "DeletePaymentParams": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        }
      }
    },
    "CreateClientResult": {
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "apiKeyExternal": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "reason": {
          "type": "string"
        },
        "stepFailed": {
          "type": "string"
        },
        "stepsRemaining": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "stepsSuccess": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ScheduleSimpleCronJobParams": {
      "properties": {
        "cronSchedule": {
          "type": "string"
        },
        "jobClass": {
          "type": "string"
        }
      }
    },
    "ProviderEmailParams": {
      "properties": {
        "duplicateEmail": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "externalAccountId": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "lastOrderId": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "subscriptionExternalId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "GameDetails": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "displayOrder": {
          "type": "integer",
          "format": "int32"
        },
        "featured": {
          "type": "boolean"
        },
        "gameLink": {
          "type": "string"
        },
        "gameLogo": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "publisher": {
          "type": "string"
        },
        "publisherLink": {
          "type": "string"
        },
        "publisherLogo": {
          "type": "string"
        },
        "releaseDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "FileData": {
      "properties": {
        "archetype": {
          "type": "string",
          "enum": ["image", "serialCodeFile", "bulkUploadFile", "video"]
        },
        "attachedFileDataList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileData"
          }
        },
        "description": {
          "$ref": "#/definitions/OfferDescription"
        },
        "externalId": {
          "type": "string"
        },
        "fileTypeNumber": {
          "type": "integer",
          "format": "int32"
        },
        "filenameInternal": {
          "type": "string"
        },
        "filenameOriginal": {
          "type": "string"
        },
        "filenamePhysical": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "CreateClientParams": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "adminUsers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminUser"
          }
        },
        "cronJobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScheduleSimpleCronJobParams"
          }
        },
        "defaultLocaleIdentifier": {
          "type": "string"
        },
        "defaultSettings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "games": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "homeClass": {
          "type": "string"
        },
        "homeCountryIdentifier": {
          "type": "string"
        },
        "homeCurrencyIdentifier": {
          "type": "string"
        },
        "homeUrl": {
          "type": "string"
        },
        "identitySupport": {
          "type": "boolean"
        },
        "inventorySupport": {
          "type": "boolean"
        },
        "localeIdentifiers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logicalClientId": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "nextStep": {
          "type": "string"
        },
        "paymentTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "propertyDatas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PropertyData"
          }
        },
        "sapClientId": {
          "type": "string"
        },
        "singleTransaction": {
          "type": "boolean"
        },
        "supportedCurrencies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedVirtualCurrencies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PaymentFormBean": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "codePayment": {
          "type": "boolean"
        },
        "configuration": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "countryDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountryDetails"
          }
        },
        "daysForRefund": {
          "type": "integer",
          "format": "int32"
        },
        "defaultPaymentForm": {
          "type": "boolean"
        },
        "defaultScope": {
          "type": "boolean"
        },
        "externalPaymentFormId": {
          "type": "string"
        },
        "graceDurationForAutomatedPayments": {
          "type": "integer",
          "format": "int32"
        },
        "mobileSupported": {
          "type": "boolean"
        },
        "paymentAggregator": {
          "type": "string",
          "enum": ["fatfoogoo", "game_studio"]
        },
        "paymentFeeBeans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentFeeData"
          }
        },
        "paymentGroupType": {
          "type": "string",
          "enum": ["iFrame", "newWindow", "synchronous", "asynchronous", "virtual"]
        },
        "paymentType": {
          "type": "string"
        },
        "pendingExpiryDurationInHours": {
          "type": "integer",
          "format": "int32"
        },
        "pendingRetryIntervalInMilliseconds": {
          "type": "integer",
          "format": "int64"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "priceRangeLimitationBeans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceRangeLimitationBean"
          }
        },
        "subscriptionScope": {
          "type": "boolean"
        },
        "transactionClearingEnabled": {
          "type": "boolean"
        }
      }
    },
    "AccountIdentityId": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        }
      }
    },
    "PaymentTransactionData": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "amountOriginal": {
          "type": "integer",
          "format": "int64"
        },
        "amountTotal": {
          "type": "integer",
          "format": "int64"
        },
        "amountWithTax": {
          "type": "number",
          "format": "float"
        },
        "amountWithTaxAsLong": {
          "type": "integer",
          "format": "int64"
        },
        "automatedPayment": {
          "type": "boolean"
        },
        "bankBillingInfoId": {
          "type": "string"
        },
        "billingAddressId": {
          "type": "string"
        },
        "catalogId": {
          "$ref": "#/definitions/CatalogId"
        },
        "catalogLifeCycle": {
          "type": "string",
          "enum": ["prestaging", "staging", "production"]
        },
        "chargebackDate": {
          "$ref": "#/definitions/Timestamp"
        },
        "clearingDate": {
          "$ref": "#/definitions/Timestamp"
        },
        "countryIdentifier": {
          "type": "string"
        },
        "countryOrigin": {
          "type": "string",
          "enum": ["ipAddress", "external", "paymentProvider", "browser", "none", "address"]
        },
        "couponCode": {
          "type": "string"
        },
        "creditCardInfoId": {
          "type": "string"
        },
        "currencyIdentifier": {
          "type": "string"
        },
        "delayedPayment": {
          "type": "boolean"
        },
        "discountReason": {
          "type": "string",
          "enum": ["campaign"]
        },
        "discountType": {
          "type": "string",
          "enum": ["none", "percent", "amount"]
        },
        "email": {
          "type": "string"
        },
        "entitlementItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitlementItem"
          }
        },
        "exchangeDate": {
          "type": "string",
          "format": "date-time"
        },
        "exchangeRate": {
          "type": "integer",
          "format": "int64"
        },
        "exchangedAmount": {
          "type": "integer",
          "format": "int64"
        },
        "exchangedAmountTotal": {
          "type": "integer",
          "format": "int64"
        },
        "exchangedPaymentProviderFees": {
          "type": "integer",
          "format": "int64"
        },
        "exchangedTransactionCostsFee": {
          "type": "integer",
          "format": "int64"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalDiscountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "externalOfferId": {
          "type": "string"
        },
        "externalPricePointId": {
          "type": "string"
        },
        "externalTransactionId": {
          "type": "string"
        },
        "fatfoogooFeeDate": {
          "type": "string",
          "format": "date-time"
        },
        "fatfoogooFees": {
          "type": "integer",
          "format": "int64"
        },
        "ffgSettlementDate": {
          "$ref": "#/definitions/Timestamp"
        },
        "finalAutomatedRetry": {
          "type": "boolean"
        },
        "firstName": {
          "type": "string"
        },
        "fulfillmentDate": {
          "$ref": "#/definitions/Timestamp"
        },
        "fulfillmentStatus": {
          "type": "string",
          "enum": ["none", "finished", "chargeback", "refunded", "reversed", "failed", "pending", "refund_initialized"]
        },
        "gameIdentifier": {
          "type": "string"
        },
        "grossAmountAsFloat": {
          "type": "number",
          "format": "float"
        },
        "identityId": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "ipAddressGeolocation": {
          "type": "string"
        },
        "itemBaseId": {
          "type": "integer",
          "format": "int64"
        },
        "lastChange": {
          "$ref": "#/definitions/Timestamp"
        },
        "lastName": {
          "type": "string"
        },
        "locale": {
          "$ref": "#/definitions/Locale"
        },
        "merchantId": {
          "type": "string"
        },
        "netAmountAsFloat": {
          "type": "number",
          "format": "float"
        },
        "nextClearingDate": {
          "$ref": "#/definitions/Timestamp"
        },
        "nextPendingRetryDate": {
          "$ref": "#/definitions/Timestamp"
        },
        "notificationContentId": {
          "type": "string"
        },
        "offerName": {
          "type": "string"
        },
        "paymentDate": {
          "$ref": "#/definitions/Timestamp"
        },
        "paymentLogId": {
          "type": "integer",
          "format": "int64"
        },
        "paymentProcess": {
          "type": "string",
          "enum": ["authorize", "capture", "authorizeAndCapture"]
        },
        "paymentProviderFees": {
          "type": "integer",
          "format": "int64"
        },
        "paymentProviderSettlementDate": {
          "$ref": "#/definitions/Timestamp"
        },
        "paymentSequenceId": {
          "type": "string"
        },
        "paymentStatus": {
          "type": "string",
          "enum": ["notStarted", "initialized", "redirected", "authorized", "finished", "pending", "expired", "failed", "fraud", "unknown", "chargeback", "technical_error", "refund_requested", "refunded", "revoked", "refund_declined", "fulfilled_but_not_settled", "reversed", "chargebackReversal", "verified", "not_synchronized", "unholded", "refund_data_requested", "refund_scheduled"]
        },
        "paymentType": {
          "type": "string"
        },
        "pricePointId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int64"
        },
        "referenceId": {
          "type": "string"
        },
        "referencedBillingInfoId": {
          "type": "string"
        },
        "sellingEntity": {
          "type": "string"
        },
        "serialCode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "tax": {
          "type": "integer",
          "format": "int64"
        },
        "taxAsFloat": {
          "type": "number",
          "format": "float"
        },
        "taxOnTop": {
          "type": "boolean"
        },
        "taxPercentage": {
          "type": "integer",
          "format": "int64"
        },
        "taxableProductCode": {
          "type": "string"
        },
        "termsConditions": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "verified": {
          "type": "boolean"
        }
      }
    },
    "OAuth2RefreshToken": {
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "Character": {},
    "GenericResponse": {
      "properties": {
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CreateDefaultClientParams": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "adminUsers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminUser"
          }
        },
        "cronJobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScheduleSimpleCronJobParams"
          }
        },
        "defaultLocaleIdentifier": {
          "type": "string"
        },
        "defaultSettings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "gameDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameDetails"
          }
        },
        "homeClass": {
          "type": "string"
        },
        "homeCountryIdentifier": {
          "type": "string"
        },
        "homeCurrencyIdentifier": {
          "type": "string"
        },
        "homeUrl": {
          "type": "string"
        },
        "identitySupport": {
          "type": "boolean"
        },
        "inventorySupport": {
          "type": "boolean"
        },
        "localeIdentifiers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logicalClientId": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "nextStep": {
          "type": "string"
        },
        "paymentFormBeans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentFormBean"
          }
        },
        "propertyDatas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PropertyData"
          }
        },
        "riskClassDatas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RiskClassData"
          }
        },
        "sapClientId": {
          "type": "string"
        },
        "singleTransaction": {
          "type": "boolean"
        },
        "supportedCurrencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyData"
          }
        },
        "supportedVirtualCurrencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyData"
          }
        }
      }
    },
    "LocalizedCountryDetails": {
      "properties": {
        "eu": {
          "type": "boolean"
        },
        "locale": {
          "type": "string"
        },
        "localeId": {
          "type": "string"
        },
        "localizedName": {
          "type": "string"
        },
        "longDescription": {
          "type": "string"
        },
        "numcode": {
          "type": "string"
        },
        "printableName": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "stateMandatory": {
          "type": "boolean"
        },
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalizedState"
          }
        }
      }
    },
    "ReferencedBillingInfoParams": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "defaultPayment": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "lastChange": {
          "$ref": "#/definitions/Timestamp"
        },
        "lastName": {
          "type": "string"
        },
        "paymentGroupType": {
          "type": "string",
          "enum": ["iFrame", "newWindow", "synchronous", "asynchronous", "virtual"]
        },
        "paymentType": {
          "type": "string"
        },
        "referenceEntityId": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "referenceUrl": {
          "type": "string"
        },
        "referencedBillingInfoExternalId": {
          "type": "string"
        },
        "referencedTxId": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "showDetailsInStore": {
          "type": "boolean"
        }
      }
    },
    "MandateAcceptanceRest": {
      "properties": {
        "accepted": {
          "type": "boolean"
        },
        "emailAsSignature": {
          "type": "string"
        }
      }
    },
    "CreateCreditCardInfoParams": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "creditCardState": {
          "type": "string",
          "enum": ["NOT_CHECKED", "INVALID", "VALID"]
        },
        "expiresMonth": {
          "type": "integer",
          "format": "int32"
        },
        "expiresYear": {
          "type": "integer",
          "format": "int32"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "lastFourDigits": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "paymentType": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "securityCode": {
          "type": "string"
        },
        "showDetailsInStore": {
          "type": "boolean"
        },
        "token": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["MASTERCARD", "VISA", "AMEX", "DINERS", "DISCOVER", "JCB", "UNKNOWN", "Aura", "ELO", "Hipercard"]
        },
        "unencryptedNumber": {
          "type": "string"
        }
      }
    },
    "CurrencyAmount": {
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "decimalAmount": {
          "type": "number",
          "format": "double"
        },
        "isoCode": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ResponseHolder«List«CouponVerificationVerboseResult»»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CouponVerificationVerboseResult"
          }
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CancelActiveSubscriptionParams": {
      "properties": {
        "providerEmailParams": {
          "$ref": "#/definitions/ProviderEmailParams"
        }
      }
    },
    "Campaign": {
      "properties": {
        "id": {
          "type": "string"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "longDescription": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GwalletTransaction": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "currencyIdentifier": {
          "type": "string"
        },
        "decimalAmount": {
          "type": "number",
          "format": "double"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "externalOfferId": {
          "type": "string"
        },
        "gameIdentifier": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "messageKey": {
          "type": "string"
        },
        "messageParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "referenceId": {
          "type": "string"
        },
        "requestParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "transactionDetailId": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "walletTrxTypeEnum": {
          "type": "string",
          "enum": ["transaction", "external", "lifetimeExpired", "chargeback", "refunded", "reversed", "transfer", "reserve", "revert", "settlement", "funding"]
        },
        "walletType": {
          "type": "string",
          "enum": ["regular", "reserved", "promo", "combined"]
        }
      }
    },
    "BuyCouponsParams": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "buyCodeOfferParams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BuyCodeOfferParams"
          }
        },
        "catalogIdentifier": {
          "type": "string"
        },
        "catalogType": {
          "type": "string"
        },
        "countryIdentifier": {
          "type": "string"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "externalTransactionId": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        }
      }
    },
    "Price": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "priceOriginal": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Offer": {
      "properties": {
        "deliveryDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          }
        },
        "longDescription": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "paymentForms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Price"
          }
        },
        "shortDescription": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "subscription": {
          "$ref": "#/definitions/Subscription"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ItemTemplate": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "ageRatingList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgeRatingData"
          }
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "classificationType": {
          "type": "string",
          "enum": ["enum.classification.type.currency", "enum.classification.type.subscription", "enum.classification.type.inGameItem", "enum.classification.type.bundle", "enum.classification.type.other"]
        },
        "cooldown": {
          "type": "integer",
          "format": "int64"
        },
        "createDate": {
          "$ref": "#/definitions/Timestamp"
        },
        "creatorAccountId": {
          "type": "string"
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileData"
          }
        },
        "gameIdentifier": {
          "type": "string"
        },
        "identityMandatory": {
          "type": "boolean"
        },
        "inGameId": {
          "type": "string"
        },
        "inventoryRetention": {
          "type": "integer",
          "format": "int64"
        },
        "itemBaseId": {
          "type": "integer",
          "format": "int64"
        },
        "itemBundles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemBundle"
          }
        },
        "lastChange": {
          "$ref": "#/definitions/Timestamp"
        },
        "maxQuantityIdentity": {
          "type": "integer",
          "format": "int64"
        },
        "maxQuantityMember": {
          "type": "integer",
          "format": "int64"
        },
        "monetaryValue": {
          "$ref": "#/definitions/MonetaryValue"
        },
        "offerDescriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfferDescription"
          }
        },
        "preconditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PreconditionData"
          }
        },
        "sendNotification": {
          "type": "boolean"
        },
        "serialCodeCollectionFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SerialCodeCollectionFile"
          }
        },
        "serialCodeEntitlement": {
          "type": "boolean"
        },
        "subscriptionModelData": {
          "$ref": "#/definitions/SubscriptionModelData"
        },
        "subscriptionModelExternalId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "TransactionLimitDetails": {
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "currencyIdentifier": {
          "type": "string"
        },
        "threshold": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Balance": {
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "currencyIdentifier": {
          "type": "string"
        },
        "decimalAmount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "RedeemCouponResult": {
      "properties": {
        "codeRedeemed": {
          "type": "boolean"
        },
        "couponCode": {
          "type": "string"
        },
        "errorCause": {
          "type": "string",
          "enum": ["transactionLimitReached", "doubleLocale", "localeInvalid", "fieldSize", "fieldEmpty", "fieldMandatory", "itemAuctionOrBuynow", "quantityNotzero", "classificationInvalid", "classificationGameNoMatch", "classificationMarketNoMatch", "birthdateInvalid", "ageInvalid", "memberNotFound", "memberDeleted", "gameInvalid", "currencyInvalid", "valueMandatory", "valueUnchangeable", "valueNotUnique", "valueInvalid", "valueNotFound", "valuesNotCombineable", "identifierInvalid", "clientInvalid", "incorrectKey", "recepientAccountInvalid", "recepientIdentityInvalid", "senderAccountInvalid", "senderIdentityInvalid", "identityInvalid", "identityNotFound", "identityNotDeletable", "identityNotOwned", "identityAttributesInvalid", "relatedMessageInvalid", "messageOwnerAccountInvalid", "messageOwnerIdentityInvalid", "messageFilterInvalid", "messageNotFound", "messageStatusNotFound", "parameterRequired", "subscriptionNotFound", "futureDateRequired", "localeNotSupported", "addressNotOwned", "addressTypeInvalid", "customDataTypeInvalid", "zipCodeCityMissmatch", "zipCodeStateMissmatch", "zipCodeInvalid", "accountIdMandatory", "accountIdMismatch", "ipAddressMandatory", "sessionInvalid", "alreadyInUse", "transactionDetailsPayed", "offerNotBuyable", "offerInvalid", "mixedCurrencies", "transactionNotFound", "disputeExists", "disputeDetailInvalid", "internal", "notAuctioned", "userRoleAssignmentInvalid", "stateInvalid", "countryInvalid", "accountNoCatalogAdmin", "shopConfigurationInvalid", "attributeInvalid", "itemNotEditable", "notEditable", "invalidOperation", "invalidImageSize", "invalidGameAttribute", "memberConfirmed", "paymentProvider", "onlineTimeLimitExceeded", "integerValueMandatory", "booleanValueMandatory", "couponInvalid", "couponConsumed", "couponExpired", "generalError", "invalidTaxIdentifier", "imageInvalid", "bundleEmpty", "inGameIdMandatory", "notSupported", "paymentnotapproved", "notFound", "restrictionViolated", "creditCardNumberIsNonDecryptable", "cpgError", "cpgConnectionError", "transactionFraud", "cpgAccountNotFound", "invalidAddress"]
        },
        "errorText": {
          "type": "string"
        },
        "inGameId": {
          "type": "string"
        },
        "redemptionSuccessful": {
          "type": "boolean"
        },
        "transactionId": {
          "type": "string"
        }
      }
    },
    "ResponseHolder«List«object»»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BankBillingInfo": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "bankAccountHolder": {
          "type": "string"
        },
        "bankAccountNumber": {
          "type": "string"
        },
        "bankBillingInfoExternalId": {
          "type": "string"
        },
        "bankBranchNumber": {
          "type": "string"
        },
        "bankName": {
          "type": "string"
        },
        "defaultPayment": {
          "type": "boolean"
        },
        "driversLicenseEnding": {
          "type": "string"
        },
        "driversLicenseState": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "lastChange": {
          "$ref": "#/definitions/Timestamp"
        },
        "paymentGroupType": {
          "type": "string",
          "enum": ["iFrame", "newWindow", "synchronous", "asynchronous", "virtual"]
        },
        "paymentType": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "CampaignToOfferData": {
      "properties": {
        "campaignDataId": {
          "$ref": "#/definitions/CampaignDataId"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "externalOfferId": {
          "type": "string"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GetEmailTemplateDataResult": {
      "properties": {
        "absolutePath": {
          "type": "string"
        },
        "emailTemplateDatas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailTemplateData"
          }
        }
      }
    },
    "BizNavSsoResult": {
      "properties": {
        "platformUserId": {
          "type": "string"
        }
      }
    },
    "FindWalletTransactionRestResult": {
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "countTotal": {
          "type": "integer",
          "format": "int32"
        },
        "from": {
          "type": "integer",
          "format": "int32"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GwalletTransactionOut"
          }
        }
      }
    },
    "LocalizedString": {
      "properties": {
        "clientName": {
          "type": "string"
        },
        "localeIdentifier": {
          "type": "string"
        },
        "messageKey": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "PaymentTransactionDataRest": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "amountOriginal": {
          "type": "number",
          "format": "double"
        },
        "amountTotal": {
          "type": "number",
          "format": "double"
        },
        "automatedPayment": {
          "type": "boolean"
        },
        "chargebackDate": {
          "$ref": "#/definitions/Timestamp"
        },
        "couponCode": {
          "type": "string"
        },
        "currencyIdentifier": {
          "type": "string"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "externalOfferId": {
          "type": "string"
        },
        "externalPricePointId": {
          "type": "string"
        },
        "fulfillmentDate": {
          "$ref": "#/definitions/Timestamp"
        },
        "fulfillmentStatus": {
          "type": "string",
          "enum": ["none", "finished", "chargeback", "refunded", "reversed", "failed", "pending", "refund_initialized"]
        },
        "identityId": {
          "type": "string"
        },
        "offer": {
          "$ref": "#/definitions/Offer"
        },
        "paymentDate": {
          "$ref": "#/definitions/Timestamp"
        },
        "paymentProcess": {
          "type": "string",
          "enum": ["authorize", "capture", "authorizeAndCapture"]
        },
        "paymentStatus": {
          "type": "string",
          "enum": ["notStarted", "initialized", "redirected", "authorized", "finished", "pending", "expired", "failed", "fraud", "unknown", "chargeback", "technical_error", "refund_requested", "refunded", "revoked", "refund_declined", "fulfilled_but_not_settled", "reversed", "chargebackReversal", "verified", "not_synchronized", "unholded", "refund_data_requested", "refund_scheduled"]
        },
        "paymentType": {
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "int64"
        },
        "referenceId": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      }
    },
    "CatalogId": {
      "properties": {
        "externalId": {
          "type": "string"
        }
      }
    },
    "BuyWithVirtualCurrencyRestParams": {
      "properties": {
        "account": {
          "$ref": "#/definitions/AccountIdRest"
        },
        "catalogIdentifier": {
          "type": "string"
        },
        "catalogLifeCycle": {
          "type": "string",
          "enum": ["prestaging", "staging", "production"]
        },
        "country": {
          "type": "string"
        },
        "couponCode": {
          "type": "string"
        },
        "externalCampaignId": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/IdentityIdRest"
        },
        "price": {
          "$ref": "#/definitions/Price"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "transactionId": {
          "type": "string"
        }
      }
    },
    "AppVersion": {
      "properties": {
        "applicationVersion": {
          "type": "string"
        },
        "buildTime": {
          "type": "string"
        },
        "svnRevision": {
          "type": "string"
        },
        "svnURL": {
          "type": "string"
        }
      }
    },
    "CampaignDataId": {
      "properties": {
        "catalogId": {
          "$ref": "#/definitions/CatalogId"
        },
        "externalCampaignId": {
          "type": "string"
        }
      }
    },
    "ResponseHolder«List«AccountBalance»»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountBalance"
          }
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CurrencyData": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "countryIdentifier": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "externalCurrencyId": {
          "type": "string"
        },
        "gameCurrency": {
          "type": "boolean"
        },
        "gameIdentifier": {
          "type": "string"
        },
        "gameOrWalletCurrency": {
          "type": "boolean"
        },
        "identityMandatory": {
          "type": "boolean"
        },
        "lifetime": {
          "type": "integer",
          "format": "int32"
        },
        "maximum": {
          "type": "integer",
          "format": "int64"
        },
        "maximumNegativeThreshold": {
          "type": "integer",
          "format": "int64"
        },
        "maximumThreshold": {
          "type": "integer",
          "format": "int64"
        },
        "maximumThresholdWarning": {
          "type": "integer",
          "format": "int64"
        },
        "minimum": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "payable": {
          "type": "boolean"
        },
        "sortOrder": {
          "type": "integer",
          "format": "int32"
        },
        "symbol": {
          "type": "string"
        },
        "walletCurrency": {
          "type": "boolean"
        },
        "walletOwner": {
          "type": "string",
          "enum": ["fatfoogoo", "client"]
        }
      }
    },
    "ResponseHolder«DebitWalletsResult»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "$ref": "#/definitions/DebitWalletsResult"
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AccountBalance": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "currencyIdentifier": {
          "type": "string"
        },
        "decimalAmount": {
          "type": "number",
          "format": "double"
        },
        "decimalAmountCombined": {
          "type": "number",
          "format": "double"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        },
        "referenceId": {
          "type": "string"
        },
        "threshold": {
          "type": "number",
          "format": "double"
        },
        "thresholdEnabled": {
          "type": "boolean"
        },
        "walletType": {
          "type": "string",
          "enum": ["regular", "reserved", "promo", "combined"]
        }
      }
    },
    "ResponseHolder«BuyCouponsResult»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "$ref": "#/definitions/BuyCouponsResult"
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CreateOrUpdateGameAttributeParams": {
      "properties": {
        "gameAttributeDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameAttributeDetails"
          }
        }
      }
    },
    "Chronology": {
      "properties": {
        "zone": {
          "$ref": "#/definitions/DateTimeZone"
        }
      }
    },
    "DebitWalletResult": {
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WalletAccountExpense"
          }
        }
      }
    },
    "DailyDealOffersResult": {
      "properties": {
        "campaign": {
          "$ref": "#/definitions/CampaignData"
        },
        "offerList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DailyDealOffer"
          }
        }
      }
    },
    "DailyDealOffer": {
      "properties": {
        "dailyDealOfferEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "dailyDealOfferStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "deliveryDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Item"
          }
        },
        "longDescription": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "paymentForms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Price"
          }
        },
        "shortDescription": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "subscription": {
          "$ref": "#/definitions/Subscription"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UserCustomAttributes": {
      "properties": {
        "connectTime": {
          "type": "string"
        },
        "fontArray": {
          "type": "string"
        },
        "graphic": {
          "type": "string"
        },
        "networkTime": {
          "type": "string"
        },
        "screen": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "startupId": {
          "type": "string"
        },
        "touch": {
          "type": "string"
        }
      }
    },
    "CreateCreditCardInfoResult": {
      "properties": {
        "creditCardDetails": {
          "$ref": "#/definitions/CreditCardDetails"
        }
      }
    },
    "TermsConditionsResponse": {
      "properties": {
        "legalNoticeLink": {
          "type": "string"
        },
        "privacyPolicyLink": {
          "type": "string"
        },
        "termsAndConditionsId": {
          "type": "string"
        },
        "termsOfSaleLink": {
          "type": "string"
        }
      }
    },
    "CreateOrUpdateGameAttributeResult": {},
    "OfferDetails": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "catalogId": {
          "$ref": "#/definitions/CatalogId"
        },
        "creatorAccountId": {
          "type": "string"
        },
        "deliveryDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDateFromStart": {
          "type": "integer",
          "format": "int32"
        },
        "endDateUnlimited": {
          "type": "boolean"
        },
        "externalCampaignIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "externalOfferId": {
          "type": "string"
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileData"
          }
        },
        "inGameId": {
          "type": "string"
        },
        "itemTemplate": {
          "$ref": "#/definitions/ItemTemplate"
        },
        "lastChange": {
          "type": "string",
          "format": "date-time"
        },
        "offerDescriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfferDescription"
          }
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "preconditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PreconditionData"
          }
        },
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Price"
          }
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "quantityUnlimited": {
          "type": "boolean"
        },
        "showOnPrimaryMarket": {
          "type": "boolean"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "startNow": {
          "type": "boolean"
        },
        "timerCountdownDuration": {
          "type": "integer",
          "format": "int64"
        },
        "timerSinglePurchase": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "ReferencedBillingInfo": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "defaultPayment": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "lastChange": {
          "$ref": "#/definitions/Timestamp"
        },
        "lastName": {
          "type": "string"
        },
        "paymentGroupType": {
          "type": "string",
          "enum": ["iFrame", "newWindow", "synchronous", "asynchronous", "virtual"]
        },
        "paymentType": {
          "type": "string"
        },
        "referenceEntityId": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "referenceUrl": {
          "type": "string"
        },
        "referencedBillingInfoExternalId": {
          "type": "string"
        },
        "referencedTxId": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        }
      }
    },
    "Map«string,string»": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "DefaultPaymentProviderResult": {
      "properties": {
        "approved": {
          "type": "boolean"
        },
        "authCode": {
          "type": "string"
        },
        "avsResponseCode": {
          "type": "string"
        },
        "captureAsynchronous": {
          "type": "boolean"
        },
        "cpgTransactionStatus": {
          "type": "string",
          "enum": ["ANY", "CANCELLED", "COMPLETED", "DECLINED", "DEFERRED", "DUPLICATE", "EXPIRED", "FAILED", "INVALID", "NEW", "PENDING", "PENDING_DATA", "PENDING_FUNDING", "PENDING_MANUAL", "REQUESTED", "REVERSED", "SUBMITTED", "SUBMITTING"]
        },
        "cvv2RespCode": {
          "type": "string"
        },
        "declined": {
          "type": "boolean"
        },
        "error": {
          "type": "boolean"
        },
        "expirationDate": {
          "$ref": "#/definitions/DateTime"
        },
        "expirationDateFormatted": {
          "type": "string"
        },
        "failed": {
          "type": "boolean"
        },
        "followUpActionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FollowUpAction"
          }
        },
        "good": {
          "type": "boolean"
        },
        "hashedPaymentFormValue": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "notificationSynchronousSent": {
          "type": "boolean"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "paymentStatus": {
          "type": "string",
          "enum": ["notStarted", "initialized", "redirected", "authorized", "finished", "pending", "expired", "failed", "fraud", "unknown", "chargeback", "technical_error", "refund_requested", "refunded", "revoked", "refund_declined", "fulfilled_but_not_settled", "reversed", "chargebackReversal", "verified", "not_synchronized", "unholded", "refund_data_requested", "refund_scheduled"]
        },
        "quickResponse": {
          "type": "boolean"
        },
        "redirectRequired": {
          "type": "boolean"
        },
        "redirectURL": {
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "thankYouPageType": {
          "type": "string",
          "enum": ["SUCCESS_PURCHASE", "PENDING_PURCHASE", "INSTRUCTIONS_FOR_PURCHASE"]
        },
        "transactionStatus": {
          "$ref": "#/definitions/TransactionStatus"
        },
        "txRefNum": {
          "type": "string"
        }
      }
    },
    "FindWalletTransactionRestParams": {
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "findWalletTransactionParams": {
          "$ref": "#/definitions/FindWalletTransactionParams"
        },
        "from": {
          "type": "integer",
          "format": "int32"
        },
        "showCountTotal": {
          "type": "boolean"
        }
      }
    },
    "ReedemCouponsResult": {
      "properties": {
        "redeemedCoupons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RedeemCouponResult"
          }
        }
      }
    },
    "CampaignData": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "campaignToOfferDatas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CampaignToOfferData"
          }
        },
        "campaignType": {
          "type": "string",
          "enum": ["promotion", "dealOfTheDay", "upselling"]
        },
        "catalogId": {
          "$ref": "#/definitions/CatalogId"
        },
        "currencyDiscounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Balance"
          }
        },
        "discountPercentage": {
          "type": "number",
          "format": "double"
        },
        "discountType": {
          "type": "string",
          "enum": ["none", "percent", "amount"]
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "externalCampaignId": {
          "type": "string"
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileData"
          }
        },
        "lastChange": {
          "$ref": "#/definitions/Timestamp"
        },
        "noEndDate": {
          "type": "boolean"
        },
        "offerDescriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfferDescription"
          }
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "preconditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PreconditionData"
          }
        },
        "referenceId": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "startNow": {
          "type": "boolean"
        },
        "upsellingTriggerDataList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpsellingTriggerData"
          }
        },
        "upsellingTriggerEventDataList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpsellingTriggerEventData"
          }
        },
        "version": {
          "type": "string"
        }
      }
    },
    "BuyCouponsResult": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "redeemCouponResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RedeemCouponResult"
          }
        },
        "referenceId": {
          "type": "string"
        }
      }
    },
    "EntitlementItem": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "amountTotal": {
          "type": "integer",
          "format": "int64"
        },
        "classificationTypeEnum": {
          "type": "string",
          "enum": ["enum.classification.type.currency", "enum.classification.type.subscription", "enum.classification.type.inGameItem", "enum.classification.type.bundle", "enum.classification.type.other"]
        },
        "couponId": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "entitlementStatusEnum": {
          "type": "string",
          "enum": ["pending", "entitled", "revoked"]
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "externalParentId": {
          "type": "string"
        },
        "externalPricePointId": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "itemBaseId": {
          "type": "integer",
          "format": "int64"
        },
        "itemBaseParentId": {
          "type": "integer",
          "format": "int64"
        },
        "lineItemId": {
          "type": "string"
        },
        "pricePointId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int64"
        },
        "referenceId": {
          "type": "string"
        },
        "serialCode": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      }
    },
    "ResponseHolder«CreditWalletsResult»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "$ref": "#/definitions/CreditWalletsResult"
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CreateIdentityParams": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "gameIdentifier": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        }
      }
    },
    "ResponseHolder«CreateOrUpdateGameAttributeResult»": {
      "properties": {
        "errorText": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "responseValue": {
          "$ref": "#/definitions/CreateOrUpdateGameAttributeResult"
        },
        "status": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CouponVerificationVerboseV2Result": {
      "properties": {
        "couponCode": {
          "type": "string"
        },
        "couponGroup": {
          "type": "string"
        },
        "languageSpecificErrorMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalizedString"
          }
        },
        "offerDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfferDetails"
          }
        },
        "validationStatus": {
          "type": "string"
        }
      }
    },
    "FindWalletTransactionParams": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "currencyIdentifier": {
          "type": "string"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "fromDate": {
          "type": "string",
          "format": "date-time"
        },
        "identityId": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "toDate": {
          "type": "string",
          "format": "date-time"
        },
        "transactionDetailId": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "walletTrxTypeEnum": {
          "type": "string",
          "enum": ["transaction", "external", "lifetimeExpired", "chargeback", "refunded", "reversed", "transfer", "reserve", "revert", "settlement", "funding"]
        },
        "walletType": {
          "type": "string",
          "enum": ["regular", "reserved", "promo", "combined"]
        }
      }
    },
    "CreateAccountResult": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        }
      }
    },
    "AddOrUpdateAddressParams": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "birthday": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "countryIsoCode": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "externalAccountId": {
          "type": "string"
        },
        "externalIdentityId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "identityId": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "stateCode": {
          "type": "string"
        },
        "street1": {
          "type": "string"
        },
        "street2": {
          "type": "string"
        },
        "street3": {
          "type": "string"
        },
        "taxId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      }
    },
    "GameAttributeDetails": {
      "properties": {
        "category": {
          "type": "string"
        },
        "childGameAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameAttributeDetails"
          }
        },
        "gameAttributeId": {
          "type": "integer",
          "format": "int64"
        },
        "gameIdentifier": {
          "type": "string"
        },
        "identityRelevant": {
          "type": "boolean"
        },
        "inGameId": {
          "type": "string"
        },
        "internal": {
          "type": "boolean"
        },
        "itemRelevant": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "sourceInGameId": {
          "type": "string"
        },
        "sourceType": {
          "type": "string",
          "enum": ["UNKNOWN", "OFFER", "ITEM", "CAMPAIGN"]
        },
        "translate": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enum": ["node", "nodevalue"]
        },
        "viewIdentifier": {
          "type": "string"
        }
      }
    }
  }
}
